Index: app/src/main/java/xjunz/tool/wechat/ui/customview/MessagePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright (c) 2020 xjunz. 保留所有权利\r\n */\r\n\r\npackage xjunz.tool.wechat.ui.customview;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.util.AttributeSet;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.customview.widget.ViewDragHelper;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport xjunz.tool.wechat.R;\r\n\r\n/**\r\n * 消息页面面板\r\n *\r\n * @see R.layout#activity_message\r\n */\r\npublic class MessagePanel extends ConstraintLayout {\r\n    private ViewDragHelper mHelper;\r\n    private View mIndicator, mIbStats, mIbSearch, mEtSearch, mIbEdit;\r\n    private ViewGroup mViewPager, mBottomBar, mCurtain, mIbContainer;\r\n    private int mCurtainHeight;\r\n    private int mMaxTop, mMinTop;\r\n    private int mIbContainerWidth, mMinContainerWidth;\r\n    private boolean mReadyToUser = false;\r\n    private float mBottomBarElevation;\r\n    private ArrayList<OnPanelSlideListener> mListenerList;\r\n\r\n    private void init() {\r\n        mHelper = ViewDragHelper.create(this, 1.0f, mCallback);\r\n        mListenerList = new ArrayList<>();\r\n\r\n        this.addOnPanelSlideListener(new OnPanelSlideListener() {\r\n            @Override\r\n            public void onPanelSlideFinished(boolean isOpen) {\r\n                if (!isOpen) {\r\n                    mEtSearch.setVisibility(GONE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onPanelSlide(float fraction) {\r\n                mEtSearch.setAlpha(fraction);\r\n                mBottomBar.setElevation(fraction * mBottomBarElevation);\r\n                int containerWidth = (int) (mMinContainerWidth + (1 - fraction) * (mIbContainerWidth - mMinContainerWidth));\r\n                mIbContainer.setRight(containerWidth);\r\n                setWidth(mIbContainer, containerWidth);\r\n                setWidth(mIndicator, containerWidth / 3);\r\n                mEtSearch.setTranslationX(mIbContainerWidth - (mIbContainerWidth - mMinContainerWidth * (2f / 3f)) * fraction);\r\n            }\r\n\r\n            @Override\r\n            public void onPanelSlideStart(boolean isToOpen) {\r\n                mReadyToUser = true;\r\n                if (isToOpen) {\r\n                    mEtSearch.setAlpha(0f);\r\n                    setWidth(mEtSearch, mIbContainerWidth - mMinContainerWidth);\r\n                    mEtSearch.setTranslationX(mIbContainerWidth);\r\n                    mEtSearch.setVisibility(VISIBLE);\r\n                } else {\r\n                    mIbEdit.setVisibility(VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //这个方法会调用onLayout，所以要在onLayout中增加处理逻辑\r\n    private void setWidth(@NotNull View view, int width) {\r\n        ViewGroup.LayoutParams lp = view.getLayoutParams();\r\n        lp.width = width;\r\n        view.setLayoutParams(lp);\r\n    }\r\n\r\n    public MessagePanel(Context context) {\r\n        super(context);\r\n        init();\r\n    }\r\n\r\n    public MessagePanel(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        init();\r\n    }\r\n\r\n    public MessagePanel(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        init();\r\n    }\r\n\r\n    public void addOnPanelSlideListener(@NonNull OnPanelSlideListener listener) {\r\n        this.mListenerList.add(listener);\r\n    }\r\n\r\n    @Override\r\n    public boolean onInterceptTouchEvent(MotionEvent event) {\r\n        return mHelper.shouldInterceptTouchEvent(event);\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        mHelper.processTouchEvent(event);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected void onFinishInflate() {\r\n        super.onFinishInflate();\r\n        mViewPager = findViewById(R.id.vp_message);\r\n        mBottomBar = findViewById(R.id.bottom_bar);\r\n        mCurtain = findViewById(R.id.ll_curtain);\r\n        mIndicator = findViewById(R.id.indicator);\r\n        mIbEdit = findViewById(R.id.ib_edit);\r\n        mIbSearch = findViewById(R.id.ib_search);\r\n        mIbStats = findViewById(R.id.ib_stats);\r\n        mEtSearch = findViewById(R.id.et_search);\r\n        mIbContainer = findViewById(R.id.ll_ib_container);\r\n        mBottomBarElevation = mBottomBar.getElevation();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\r\n        if (!mReadyToUser) {\r\n            super.onLayout(changed, left, top, right, bottom);\r\n            mCurtainHeight = mCurtain.getMeasuredHeight();\r\n            mMaxTop = mCurtainHeight - mIbContainer.getMeasuredHeight();\r\n            mMinTop = 0;\r\n            mIbContainerWidth = mIbContainer.getMeasuredWidth();\r\n            mMinContainerWidth = (int) (mIbContainerWidth * 0.5);\r\n            mCurtain.setBottom(mMaxTop + mCurtainHeight);\r\n            mCurtain.setTop(mMaxTop);\r\n        } else {\r\n            int curtainCurTop = mCurtain.getTop();\r\n            super.onLayout(changed, left, top, right, bottom);\r\n            mCurtain.layout(left, curtainCurTop, right, curtainCurTop + mCurtainHeight);\r\n        }\r\n    }\r\n\r\n    public void openPanel() {\r\n        if (mHelper.smoothSlideViewTo(mCurtain, 0, mMinTop)) {\r\n            postInvalidateOnAnimation();\r\n        }\r\n    }\r\n\r\n    public void closePanel() {\r\n        if (mHelper.smoothSlideViewTo(mCurtain, 0, mMaxTop)) {\r\n            postInvalidateOnAnimation();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void computeScroll() {\r\n        if (mHelper.continueSettling(true)) {\r\n            postInvalidateOnAnimation();\r\n        }\r\n    }\r\n\r\n    private final ViewDragHelper.Callback mCallback = new ViewDragHelper.Callback() {\r\n        private int mFormerState = ViewDragHelper.STATE_IDLE;\r\n\r\n        @Override\r\n        public boolean tryCaptureView(@NonNull View child, int pointerId) {\r\n            return child.getId() == mCurtain.getId();\r\n        }\r\n\r\n\r\n        @Override\r\n        public int clampViewPositionVertical(@NonNull View child, int top, int dy) {\r\n            return Math.min(mMaxTop, Math.max(top, mMinTop));\r\n        }\r\n\r\n        @Override\r\n        public void onViewDragStateChanged(int state) {\r\n            super.onViewDragStateChanged(state);\r\n            if (mFormerState == ViewDragHelper.STATE_IDLE && (state == ViewDragHelper.STATE_DRAGGING || state == ViewDragHelper.STATE_SETTLING)) {\r\n                int top = mCurtain.getTop();\r\n                for (OnPanelSlideListener listener : mListenerList) {\r\n                    listener.onPanelSlideStart(mMaxTop - top < top - mMinTop);\r\n                }\r\n            } else if (state == ViewDragHelper.STATE_IDLE) {\r\n                for (OnPanelSlideListener listener : mListenerList) {\r\n                    listener.onPanelSlideFinished(mCurtain.getTop() == mMinTop);\r\n                }\r\n            }\r\n            mFormerState = state;\r\n        }\r\n\r\n        @Override\r\n        public void onViewPositionChanged(@NonNull View changedView, int left, int top, int dx, int dy) {\r\n            super.onViewPositionChanged(changedView, left, top, dx, dy);\r\n            float fraction = (float) (mMaxTop - top) / (mMaxTop - mMinTop);\r\n            for (OnPanelSlideListener listener : mListenerList) {\r\n                listener.onPanelSlide(fraction);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public int getViewVerticalDragRange(@NonNull View child) {\r\n            return mCurtainHeight;\r\n        }\r\n\r\n        @Override\r\n        public void onViewReleased(@NotNull View releasedChild, float xvel, float yvel) {\r\n            if (yvel > 0) {\r\n                closePanel();\r\n            } else if (yvel < 0) {\r\n                openPanel();\r\n            } else {\r\n                if (((float) releasedChild.getTop() - mMinTop) / (mMaxTop - mMinTop) > .5f) {\r\n                    closePanel();\r\n                } else {\r\n                    openPanel();\r\n                }\r\n            }\r\n            super.onViewReleased(releasedChild, xvel, yvel);\r\n        }\r\n    };\r\n\r\n    public interface OnPanelSlideListener {\r\n        void onPanelSlideFinished(boolean isOpen);\r\n\r\n        void onPanelSlide(float fraction);\r\n\r\n        void onPanelSlideStart(boolean isToOpen);\r\n    }\r\n\r\n    public boolean isOpen() {\r\n        return mCurtain.getTop() == mMinTop;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/customview/MessagePanel.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/ui/customview/MessagePanel.java	(date 1603022549295)
@@ -14,12 +14,15 @@
 import androidx.annotation.NonNull;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.customview.widget.ViewDragHelper;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewpager2.widget.ViewPager2;
 
 import org.jetbrains.annotations.NotNull;
 
 import java.util.ArrayList;
 
 import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.util.UiUtils;
 
 /**
  * 消息页面面板
@@ -28,8 +31,9 @@
  */
 public class MessagePanel extends ConstraintLayout {
     private ViewDragHelper mHelper;
-    private View mIndicator, mIbStats, mIbSearch, mEtSearch, mIbEdit;
-    private ViewGroup mViewPager, mBottomBar, mCurtain, mIbContainer;
+    private View mIndicator, mEtSearch, mIbEdit;
+    private ViewPager2 mViewPager;
+    private ViewGroup mBottomBar, mCurtain, mIbContainer;
     private int mCurtainHeight;
     private int mMaxTop, mMinTop;
     private int mIbContainerWidth, mMinContainerWidth;
@@ -56,8 +60,10 @@
                 int containerWidth = (int) (mMinContainerWidth + (1 - fraction) * (mIbContainerWidth - mMinContainerWidth));
                 mIbContainer.setRight(containerWidth);
                 setWidth(mIbContainer, containerWidth);
-                setWidth(mIndicator, containerWidth / 3);
-                mEtSearch.setTranslationX(mIbContainerWidth - (mIbContainerWidth - mMinContainerWidth * (2f / 3f)) * fraction);
+                int indicatorWidth = containerWidth / 3;
+                setWidth(mIndicator, indicatorWidth);
+                mIndicator.setTranslationX(mViewPager.getCurrentItem() * indicatorWidth);
+                mEtSearch.setTranslationX(mIbContainerWidth - (mIbContainerWidth - mMinContainerWidth /* *(2f / 3f)*/) * fraction);
             }
 
             @Override
@@ -102,13 +108,19 @@
     }
 
     @Override
-    public boolean onInterceptTouchEvent(MotionEvent event) {
+    public boolean onInterceptTouchEvent(@NotNull MotionEvent event) {
+        mX = event.getX();
+        mY = event.getY();
         return mHelper.shouldInterceptTouchEvent(event);
     }
 
+    private float mX, mY;
+
     @SuppressLint("ClickableViewAccessibility")
     @Override
-    public boolean onTouchEvent(MotionEvent event) {
+    public boolean onTouchEvent(@NotNull MotionEvent event) {
+        mX = event.getX();
+        mY = event.getY();
         mHelper.processTouchEvent(event);
         return true;
     }
@@ -120,12 +132,37 @@
         mBottomBar = findViewById(R.id.bottom_bar);
         mCurtain = findViewById(R.id.ll_curtain);
         mIndicator = findViewById(R.id.indicator);
-        mIbEdit = findViewById(R.id.ib_edit);
-        mIbSearch = findViewById(R.id.ib_search);
-        mIbStats = findViewById(R.id.ib_stats);
         mEtSearch = findViewById(R.id.et_search);
+        mIbEdit = findViewById(R.id.ib_edit);
         mIbContainer = findViewById(R.id.ll_ib_container);
         mBottomBarElevation = mBottomBar.getElevation();
+        findViewById(R.id.ib_stats).setOnClickListener(v -> {
+            mViewPager.setCurrentItem(0, true);
+            if (!isOpen()) {
+                openPanel();
+            }
+        });
+        findViewById(R.id.ib_search).setOnClickListener(v -> {
+            mViewPager.setCurrentItem(2, true);
+            if (!isOpen()) {
+                openPanel();
+            }
+        });
+        findViewById(R.id.ib_edit).setOnClickListener(v -> {
+            mViewPager.setCurrentItem(1, true);
+            if (!isOpen()) {
+                openPanel();
+            }
+        });
+        mViewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
+            @Override
+            public void onPageSelected(int position) {
+                super.onPageSelected(position);
+                if (isOpen()) {
+                    UiUtils.animateTranslateX(mIndicator, mIndicator.getWidth() * position);
+                }
+            }
+        });
     }
 
 
@@ -171,7 +208,20 @@
 
         @Override
         public boolean tryCaptureView(@NonNull View child, int pointerId) {
-            return child.getId() == mCurtain.getId();
+            if (child.getId() == mCurtain.getId()) {
+                //当我们的搜索结果列表在点击范围内且不能下滑时，才返回true
+                //不然我们的列表没法下滑
+                RecyclerView list = mCurtain.findViewById(R.id.rv_result);
+                if (list != null) {
+                    int[] lt = new int[2];
+                    list.getLocationInWindow(lt);
+                    if (mX >= lt[0] && mX <= lt[0] + list.getWidth() && mY >= lt[1] && mY <= lt[1] + list.getHeight()) {
+                        return !list.canScrollVertically(-1);
+                    }
+                }
+                return true;
+            }
+            return false;
         }
 
 
@@ -223,7 +273,6 @@
                     openPanel();
                 }
             }
-            super.onViewReleased(releasedChild, xvel, yvel);
         }
     };
 
Index: app/src/main/res/layout/activity_image_viewer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <com.bm.library.PhotoView\r\n        android:transitionName=\"@string/tn_avatar\"\r\n        android:id=\"@+id/photo_view\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:layout_width=\"500dp\"\r\n        android:layout_height=\"500dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_image_viewer.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/layout/activity_image_viewer.xml	(date 1594831352349)
@@ -7,12 +7,13 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <com.bm.library.PhotoView
-        android:transitionName="@string/tn_avatar"
-        android:id="@+id/photo_view"
+    <ImageView
+        android:id="@+id/iv_avatar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:contentDescription="@string/cd_avatar"
         android:scaleType="centerCrop"
-        android:layout_width="500dp"
-        android:layout_height="500dp"
+        android:transitionName="@string/tn_avatar"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/java/xjunz/tool/wechat/ui/main/MessageActivity.java
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/main/MessageActivity.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/ui/main/MessageActivity.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
@@ -1,248 +0,0 @@
-/*
- * Copyright (c) 2020 xjunz. 保留所有权利
- */
-
-package xjunz.tool.wechat.ui.main;
-
-import android.os.Bundle;
-import android.view.ContextMenu;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.animation.AccelerateDecelerateInterpolator;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.databinding.DataBindingUtil;
-import androidx.databinding.ViewDataBinding;
-import androidx.lifecycle.ViewModelProvider;
-import androidx.recyclerview.widget.RecyclerView;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import xjunz.tool.wechat.BR;
-import xjunz.tool.wechat.R;
-import xjunz.tool.wechat.data.viewmodel.MessageViewModel;
-import xjunz.tool.wechat.databinding.ActivityMessageBinding;
-import xjunz.tool.wechat.impl.Environment;
-import xjunz.tool.wechat.impl.model.account.Talker;
-import xjunz.tool.wechat.impl.model.message.Message;
-import xjunz.tool.wechat.impl.repo.ContactRepository;
-import xjunz.tool.wechat.impl.repo.MessageRepository;
-import xjunz.tool.wechat.ui.BaseActivity;
-import xjunz.tool.wechat.ui.customview.MasterToast;
-import xjunz.tool.wechat.util.RxJavaUtils;
-import xjunz.tool.wechat.util.UiUtils;
-
-public class MessageActivity extends BaseActivity {
-    public static final String EXTRA_DATA = "MessageActivity.extra.data";
-    private static final int INITIAL_LOAD_COUNT = 50;
-    private static final int CONSEQUENT_LOAD_COUNT = 100;
-    private Talker mTalker;
-    private RecyclerView mRvMessage;
-    private List<Message> mMessageList;
-    private MessageRepository mMessageRepo;
-    private ContactRepository mContactRepo;
-    private MessageAdapter mAdapter;
-    private ActivityMessageBinding mBinding;
-    private MessageViewModel mModel;
-    private int mItemShowingContextMenu = -1;
-    private boolean mHasLoadAllMessages;
-
-    @Override
-    protected void onCreate(@Nullable Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mTalker = (Talker) getIntent().getSerializableExtra(EXTRA_DATA);
-        if (mTalker == null) {
-            MasterToast.shortToast("No data passed in, who are u?");
-            finish();
-        } else {
-            mMessageRepo = MessageRepository.getInstance();
-            mContactRepo = ContactRepository.getInstance();
-            mBinding = DataBindingUtil.setContentView(this, R.layout.activity_message);
-            mModel = new ViewModelProvider(this, new ViewModelProvider.NewInstanceFactory()).get(MessageViewModel.class);
-            mBinding.setTalker(mTalker);
-            mBinding.setModel(mModel);
-            mRvMessage = mBinding.rvMessage;
-            initList();
-        }
-    }
-
-
-    private void initList() {
-        mMessageList = new ArrayList<>();
-        RxJavaUtils.single(() -> mMessageRepo.queryMessageByTalkerLimit(mTalker.id, INITIAL_LOAD_COUNT, mMessageList)).subscribe(new RxJavaUtils.SingleObserverAdapter<Integer>() {
-            @Override
-            public void onSuccess(Integer o) {
-                mHasLoadAllMessages = mMessageList.size() >= mTalker.messageCount;
-                mAdapter = new MessageAdapter();
-                mRvMessage.setAdapter(mAdapter);
-                //回到最底部，显示最新的消息记录（因为是reverseLayout的）
-                mRvMessage.scrollToPosition(0);
-            }
-        });
-        mBinding.rvMessage.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            int formerState = RecyclerView.SCROLL_STATE_IDLE;
-
-            @Override
-            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {
-                super.onScrollStateChanged(recyclerView, newState);
-                formerState = newState;
-            }
-
-            @Override
-            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
-                super.onScrolled(recyclerView, dx, dy);
-                //当用户滑动到顶部的时候
-                if (formerState != RecyclerView.SCROLL_STATE_IDLE && !mBinding.rvMessage.canScrollVertically(-1)) {
-                    //如果已经数据已经全部加载完
-                    if (mHasLoadAllMessages) {
-                        //提示
-                        UiUtils.toast(R.string.has_loaded_all_msg);
-                        return;
-                    }
-                    //否则显示加载进度条
-                    UiUtils.fadeIn(mBinding.pbLoad);
-                    RxJavaUtils.single(() -> {
-                        //为了加载动画不一闪而过造成不好的用户体验，
-                        //假装加载500毫秒，让动画跑一会儿，其实秒加载。
-                        Thread.sleep(500);
-                        return mMessageRepo.queryMessageByTalkerLimit(mTalker.id, INITIAL_LOAD_COUNT, mMessageList);
-                    }).subscribe(new RxJavaUtils.SingleObserverAdapter<Integer>() {
-                        @Override
-                        public void onSuccess(Integer count) {
-                            super.onSuccess(count);
-                            //关闭加载进度条并更新数据
-                            UiUtils.fadeOut(mBinding.pbLoad);
-                            mHasLoadAllMessages = mMessageList.size() >= mTalker.messageCount;
-                            mAdapter.notifyItemInserted(mMessageList.size() - count);
-                            mBinding.rvMessage.smoothScrollBy(0, -100, new AccelerateDecelerateInterpolator());
-                        }
-                    });
-                }
-            }
-        });
-    }
-
-    @Override
-    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
-        super.onCreateContextMenu(menu, v, menuInfo);
-        getMenuInflater().inflate(R.menu.message, menu);
-    }
-
-    public void onMessageClicked(@NonNull Message message) {
-        UiUtils.toast(message.getRawContent());
-    }
-
-    @Override
-    public boolean onContextItemSelected(@NonNull MenuItem item) {
-        if (mItemShowingContextMenu != -1) {
-            switch (item.getItemId()) {
-                case R.id.item_add_before:
-                    break;
-                case R.id.item_add_after:
-                    break;
-                case R.id.item_delete:
-                    break;
-                case R.id.item_edit:
-                    break;
-                case R.id.item_check:
-                    break;
-            }
-        }
-        return super.onContextItemSelected(item);
-    }
-
-
-    private class MessageAdapter extends RecyclerView.Adapter<MessageViewHolder> {
-        private final int FLAG_IS_SEND = 13;
-        private final int ITEM_TYPE_PLAIN = 1;
-        private final int ITEM_TYPE_SYSTEM = 2;
-        private final int ITEM_TYPE_COMPLEX = 3;
-
-        private boolean isSend(int compositeType) {
-            return compositeType % FLAG_IS_SEND == 0;
-        }
-
-        private int getType(int compositeType) {
-            return compositeType / (isSend(compositeType) ? FLAG_IS_SEND : 1);
-        }
-
-        private int getResOf(int compositeType) {
-            boolean left = !isSend(compositeType);
-            int type = getType(compositeType);
-            switch (type) {
-                case ITEM_TYPE_SYSTEM:
-                    return R.layout.item_bubble_system;
-                case ITEM_TYPE_COMPLEX:
-                    return left ? R.layout.item_bubble_complex_left : R.layout.item_bubble_complex_right;
-                case ITEM_TYPE_PLAIN:
-                    return left ? R.layout.item_bubble_plain_left : R.layout.item_bubble_plain_right;
-
-            }
-            throw new IllegalArgumentException("No such type: " + compositeType);
-        }
-
-        @Override
-        public int getItemViewType(int position) {
-            Message message = mMessageList.get(position);
-            Message.Type type = message.getType();
-            if (message.getType() == Message.Type.SYSTEM) {
-                return ITEM_TYPE_SYSTEM;
-            } else {
-                if (type == null || type.isComplex()) {
-                    return (message.isSend() ? FLAG_IS_SEND : 1) * ITEM_TYPE_COMPLEX;
-                } else {
-                    return (message.isSend() ? FLAG_IS_SEND : 1) * ITEM_TYPE_PLAIN;
-                }
-            }
-        }
-
-        @NonNull
-        @Override
-        public MessageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-            ViewDataBinding binding = DataBindingUtil.inflate(getLayoutInflater(), getResOf(viewType), parent, false);
-            return new MessageViewHolder(binding);
-        }
-
-        @Override
-        public void onBindViewHolder(@NonNull MessageViewHolder holder, int position) {
-            Message message = mMessageList.get(position);
-            holder.binding.setVariable(BR.message, message);
-            if (message.getType() != Message.Type.SYSTEM) {
-                if (message.isSend()) {
-                    holder.binding.setVariable(BR.account, Environment.getInstance().getCurrentUser());
-                } else {
-                    holder.binding.setVariable(BR.account, message.getGroupTalkerId() == null ? mTalker : ContactRepository.getInstance().get(message.requireSenderId()));
-                }
-            }
-            holder.binding.executePendingBindings();
-        }
-
-        @Override
-        public int getItemCount() {
-            return mMessageList.size();
-        }
-    }
-
-    private class MessageViewHolder extends RecyclerView.ViewHolder {
-        ViewDataBinding binding;
-
-        public MessageViewHolder(@NonNull ViewDataBinding binding) {
-            super(binding.getRoot());
-            this.binding = binding;
-            this.binding.setVariable(BR.activity, MessageActivity.this);
-        }
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (mBinding.messagePanel.isOpen()) {
-            mBinding.messagePanel.closePanel();
-        } else {
-            super.onBackPressed();
-        }
-    }
-
-}
Index: app/src/main/java/xjunz/tool/wechat/ui/customview/CircularImageView.java
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/customview/CircularImageView.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/ui/customview/CircularImageView.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
@@ -1,27 +0,0 @@
-/*
- * Copyright (c) 2020 xjunz. 保留所有权利
- */
-
-package xjunz.tool.wechat.ui.customview;
-
-import android.content.Context;
-import android.graphics.Outline;
-import android.util.AttributeSet;
-import android.view.View;
-import android.view.ViewOutlineProvider;
-
-import androidx.annotation.Nullable;
-import androidx.appcompat.widget.AppCompatImageView;
-
-public class CircularImageView extends AppCompatImageView {
-    public CircularImageView(Context context, @Nullable AttributeSet attrs) {
-        super(context, attrs);
-        setOutlineProvider(new ViewOutlineProvider() {
-            @Override
-            public void getOutline(View view, Outline outline) {
-                outline.setOval(getPaddingLeft(), getPaddingTop(), getWidth() - getPaddingLeft(), getHeight() - getPaddingTop());
-            }
-        });
-        setClipToOutline(true);
-    }
-}
Index: app/src/main/java/xjunz/tool/wechat/impl/repo/ComplexMessageRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/repo/ComplexMessageRepository.java	(date 1604475139993)
+++ app/src/main/java/xjunz/tool/wechat/impl/repo/ComplexMessageRepository.java	(date 1604475139993)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.repo;
+
+import androidx.annotation.CheckResult;
+
+import net.sqlcipher.Cursor;
+
+import org.jetbrains.annotations.NotNull;
+
+import xjunz.tool.wechat.impl.model.message.ComplexMessage;
+
+public class ComplexMessageRepository extends LifecyclePerceptiveRepository {
+    private static final String TABLE_APP_MESSAGE = "AppMessage";
+
+    ComplexMessageRepository() {
+    }
+
+    @CheckResult
+    public boolean fulfillComplexMessage(@NotNull ComplexMessage message) {
+        boolean found = false;
+        Cursor cursor = getDatabase().rawQuery("select title,description,source,type from " + TABLE_APP_MESSAGE + " where msgId=" + message.getMsgId(), null);
+        if (cursor.moveToNext() && !cursor.isClosed()) {
+            message.setTitle(cursor.getString(0));
+            message.setDescription(cursor.getString(1));
+            message.setSource(cursor.getString(2));
+            message.setRawSubtype(cursor.getInt(3));
+            found = true;
+        }
+        cursor.close();
+        return found;
+    }
+}
Index: app/src/main/res/drawable/ic_close_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<vector android:height=\"24dp\"\r\n    android:tint=\"#FFFFFF\"\r\n    android:viewportHeight=\"24.0\"\r\n    android:viewportWidth=\"24.0\"\r\n    android:width=\"24dp\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path\r\n        android:fillColor=\"#FF000000\"\r\n        android:pathData=\"M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z\" />\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_close_24dp.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/drawable/ic_close_24dp.xml	(date 1604409302723)
@@ -2,12 +2,11 @@
   ~ Copyright (c) 2020 xjunz. 保留所有权利
   -->
 
-<vector android:height="24dp"
-    android:tint="#FFFFFF"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0"
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
     android:width="24dp"
-    xmlns:android="http://schemas.android.com/apk/res/android">
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
     <path
         android:fillColor="#FF000000"
         android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z" />
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<resources>\r\n    <color name=\"colorAccent\">#008577</color>\r\n    <color name=\"colorAccentWeak\">#30008577</color>\r\n    <color name=\"colorAccentDark\">#00574B</color>\r\n    <color name=\"colorMask\">#40000000</color>\r\n    <color name=\"colorToast\">#A0000000</color>\r\n    <color name=\"colorPrimary\">@android:color/white</color>\r\n    <color name=\"colorPrimaryDark\">#BCBCBC</color>\r\n    <color name=\"colorAccentBlind\">#80C0BB</color>\r\n    <color name=\"colorTintDark\">#626262</color>\r\n    <color name=\"colorTintDarkDisabled\">#BEBEBE</color>\r\n    <color name=\"colorBackgroundLightGrey\">#04000000</color>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/values/colors.xml	(date 1605168431881)
@@ -13,5 +13,7 @@
     <color name="colorAccentBlind">#80C0BB</color>
     <color name="colorTintDark">#626262</color>
     <color name="colorTintDarkDisabled">#BEBEBE</color>
-    <color name="colorBackgroundLightGrey">#04000000</color>
+    <color name="colorBackgroundMask">#05000000</color>
+    <color name="colorError">#FFEBEE</color>
+    <color name="colorOk">#B2DFDB</color>
 </resources>
Index: app/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<resources>\r\n    <declare-styleable name=\"FabTransform\">\r\n        <attr name=\"startColor\" format=\"color|reference\" />\r\n        <attr name=\"endColor\" format=\"color|reference\" />\r\n        <attr name=\"endCornerRadius\" format=\"dimension|reference\" />\r\n        <attr name=\"startCornerRadius\" format=\"dimension|reference\" />\r\n\r\n    </declare-styleable>\r\n    <declare-styleable name=\"FabRevealTransform\">\r\n        <attr name=\"fabColor\" format=\"color|reference\" />\r\n        <attr name=\"fabIcon\" format=\"reference\" />\r\n    </declare-styleable>\r\n    <declare-styleable name=\"BottomBar\">\r\n        <attr name=\"imageEntries\" format=\"reference\" />\r\n        <attr name=\"captionEntries\" format=\"reference\" />\r\n    </declare-styleable>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/attrs.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/values/attrs.xml	(date 1594901847397)
@@ -3,12 +3,12 @@
   -->
 
 <resources>
-    <declare-styleable name="FabTransform">
+    <declare-styleable name="Transform">
         <attr name="startColor" format="color|reference" />
         <attr name="endColor" format="color|reference" />
         <attr name="endCornerRadius" format="dimension|reference" />
         <attr name="startCornerRadius" format="dimension|reference" />
-
+        <attr name="opticalButtonColor" format="color|reference" />
     </declare-styleable>
     <declare-styleable name="FabRevealTransform">
         <attr name="fabColor" format="color|reference" />
@@ -18,4 +18,11 @@
         <attr name="imageEntries" format="reference" />
         <attr name="captionEntries" format="reference" />
     </declare-styleable>
+    <declare-styleable name="ElasticDragDismissFrameLayout">
+        <attr name="dragDismissTarget" format="reference" />
+        <attr name="dragDismissDistance" format="dimension" />
+        <attr name="dragDismissFraction" format="float" />
+        <attr name="dragDismissScale" format="float" />
+        <attr name="dragElasticity" format="float" />
+    </declare-styleable>
 </resources>
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/impl/model/message/SystemMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/model/message/SystemMessage.java	(date 1599653519352)
+++ app/src/main/java/xjunz/tool/wechat/impl/model/message/SystemMessage.java	(date 1599653519352)
@@ -0,0 +1,259 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.model.message;
+
+import android.content.ContentValues;
+import android.text.Spanned;
+
+import androidx.annotation.NonNull;
+import androidx.core.text.HtmlCompat;
+
+import org.jetbrains.annotations.NotNull;
+import org.xml.sax.Attributes;
+import org.xml.sax.SAXException;
+import org.xml.sax.helpers.DefaultHandler;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.parsers.SAXParser;
+import javax.xml.parsers.SAXParserFactory;
+
+import xjunz.tool.wechat.impl.model.account.Contact;
+import xjunz.tool.wechat.impl.repo.ContactRepository;
+import xjunz.tool.wechat.impl.repo.RepositoryFactory;
+import xjunz.tool.wechat.util.UniUtils;
+
+import static xjunz.tool.wechat.impl.model.message.MessageFactory.TYPE_SYSTEM_JOIN_GROUP;
+import static xjunz.tool.wechat.impl.model.message.MessageFactory.TYPE_SYSTEM_PAT;
+
+/**
+ * 系统消息类
+ */
+public class SystemMessage extends Message {
+    private String parsedContent;
+    private Spanned html;
+    private CharSequence spannedContent;
+
+    public SystemMessage(ContentValues values) {
+        super(values);
+        this.senderId = null;
+    }
+
+    private Spanned getHtml() {
+        return html = html == null ? HtmlCompat.fromHtml(escapeTag(), HtmlCompat.FROM_HTML_MODE_LEGACY) : html;
+    }
+
+    /**
+     * 去除img TAG，因为我们没必要显示系统消息里的图片
+     * 去除scene TAG，某些消息里的场景TAG
+     *
+     * @return 去除了img TAG 的内容
+     */
+    @NotNull
+    private String escapeTag() {
+        //我们仅做一个简单的替换
+        return content.replace("<img", "<img_escaped").replaceAll("<scene>.*?</scene>", "");
+    }
+
+    @NonNull
+    @Override
+    public String getParsedContent() {
+        if (parsedContent == null) {
+            switch (getRawType()) {
+                case TYPE_SYSTEM_JOIN_GROUP:
+                    parseJoinGroupMessage();
+                    break;
+                case TYPE_SYSTEM_PAT:
+                    parsePatMessage();
+                    break;
+                default:
+                    parsedContent = getHtml().toString();
+                    break;
+            }
+        }
+        return parsedContent;
+    }
+
+    @NonNull
+    @Override
+    public CharSequence getSpannedContent() {
+        if (spannedContent == null) {
+            switch (getRawType()) {
+                case TYPE_SYSTEM_JOIN_GROUP:
+                case TYPE_SYSTEM_PAT:
+                    spannedContent = getParsedContent();
+                    break;
+                default:
+                    spannedContent = getHtml();
+                    break;
+            }
+        }
+        return spannedContent;
+    }
+
+
+    private void parseJoinGroupMessage() {
+        SAXParserFactory factory = SAXParserFactory.newInstance();
+        try {
+            SAXParser parser = factory.newSAXParser();
+            JoinGroupMessageHandler handler = new JoinGroupMessageHandler();
+            parser.parse(new ByteArrayInputStream(content.getBytes()), handler);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private void parsePatMessage() {
+        SAXParserFactory factory = SAXParserFactory.newInstance();
+        try {
+            SAXParser parser = factory.newSAXParser();
+            PatMessageHandler handler = new PatMessageHandler();
+            parser.parse(new ByteArrayInputStream(content.getBytes()), handler);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+
+    private class JoinGroupMessageHandler extends DefaultHandler {
+        private boolean inTemplate;
+        private boolean inTarget;
+        private boolean inLink;
+        private String template;
+        private String currentPattern;
+        private List<String> patterns = new ArrayList<>();
+        private HashMap<String, String> matchedMap;
+
+
+        @Override
+        public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
+            super.startElement(uri, localName, qName, attributes);
+            switch (qName) {
+                case "template":
+                    inTemplate = true;
+                    break;
+                case "link":
+                    inLink = true;
+                    currentPattern = attributes.getValue("name");
+                    break;
+                case "plain":
+                case "nickname":
+                    inTarget = true;
+                default:
+                    break;
+            }
+        }
+
+        @Override
+        public void endElement(String uri, String localName, String qName) throws SAXException {
+            super.endElement(uri, localName, qName);
+            switch (qName) {
+                case "template":
+                    inTemplate = false;
+                    break;
+                case "link":
+                    inLink = false;
+                    break;
+                case "plain":
+                case "nickname":
+                    inTarget = false;
+                    break;
+            }
+        }
+
+        @Override
+        public void endDocument() throws SAXException {
+            super.endDocument();
+            for (String pattern : patterns) {
+                String matched = matchedMap.get(pattern);
+                if (matched == null) {
+                    matched = "";
+                }
+                template = template.replace("$" + pattern + "$", matched);
+            }
+            parsedContent = template;
+        }
+
+        @Override
+        public void characters(char[] ch, int start, int length) throws SAXException {
+            super.characters(ch, start, length);
+            String text = new String(ch, start, length);
+            if (text.length() == 0) {
+                text = "";
+            }
+            if (inTemplate) {
+                template = text;
+                patterns = UniUtils.extract(text, "\\$(.+?)\\$");
+                matchedMap = new HashMap<>();
+            } else if (inLink && inTarget) {
+                String matched = matchedMap.get(currentPattern);
+                if (matched == null) {
+                    matched = text;
+                } else {
+                    matched = matched + "、" + text;
+                }
+                matchedMap.put(currentPattern, matched);
+            }
+        }
+    }
+
+    private class PatMessageHandler extends DefaultHandler {
+        private boolean inTemplate;
+        private StringBuilder message;
+        private ContactRepository repo;
+
+        public PatMessageHandler() {
+            super();
+            message = new StringBuilder();
+            repo = RepositoryFactory.get(ContactRepository.class);
+        }
+
+        @Override
+        public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
+            super.startElement(uri, localName, qName, attributes);
+            if ("template".equals(qName)) {
+                inTemplate = true;
+            }
+        }
+
+        @Override
+        public void endElement(String uri, String localName, String qName) throws SAXException {
+            super.endElement(uri, localName, qName);
+            if ("template".equals(qName)) {
+                inTemplate = false;
+            }
+        }
+
+        @Override
+        public void endDocument() throws SAXException {
+            super.endDocument();
+            parsedContent = message.toString();
+        }
+
+        @Override
+        public void characters(char[] ch, int start, int length) throws SAXException {
+            super.characters(ch, start, length);
+            if (inTemplate) {
+                String text = new String(ch, start, length);
+                List<String> wxids = UniUtils.extract(text, "\\$\\{(.+?)\\}");
+                for (String wxid : wxids) {
+                    Contact contact = repo.get(wxid);
+                    if (contact != null) {
+                        text = text.replace("${" + wxid + "}", contact.getName());
+                    }
+                }
+                if (message.length() == 0) {
+                    message.append(text);
+                } else {
+                    message.append("\n").append(text);
+                }
+            }
+        }
+    }
+}
Index: app/src/main/java/xjunz/tool/wechat/ui/message/MessageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/message/MessageActivity.java	(date 1605602797212)
+++ app/src/main/java/xjunz/tool/wechat/ui/message/MessageActivity.java	(date 1605602797212)
@@ -0,0 +1,637 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+
+package xjunz.tool.wechat.ui.message;
+
+import android.annotation.SuppressLint;
+import android.app.ActivityOptions;
+import android.content.Intent;
+import android.os.Bundle;
+import android.transition.Transition;
+import android.util.Log;
+import android.view.ContextMenu;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.AccelerateDecelerateInterpolator;
+import android.widget.ImageView;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.databinding.DataBindingUtil;
+import androidx.databinding.ViewDataBinding;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentActivity;
+import androidx.lifecycle.ViewModelProvider;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewpager2.adapter.FragmentStateAdapter;
+
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+import java.util.Objects;
+
+import xjunz.tool.wechat.BR;
+import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.data.viewmodel.EditorViewModel;
+import xjunz.tool.wechat.data.viewmodel.MessageEditorViewModel;
+import xjunz.tool.wechat.data.viewmodel.MessageViewModel;
+import xjunz.tool.wechat.databinding.ActivityMessageBinding;
+import xjunz.tool.wechat.impl.DatabaseModifier;
+import xjunz.tool.wechat.impl.Environment;
+import xjunz.tool.wechat.impl.model.account.Account;
+import xjunz.tool.wechat.impl.model.account.Talker;
+import xjunz.tool.wechat.impl.model.message.BackupMessage;
+import xjunz.tool.wechat.impl.model.message.Edition;
+import xjunz.tool.wechat.impl.model.message.Message;
+import xjunz.tool.wechat.impl.model.message.MessageFactory;
+import xjunz.tool.wechat.impl.repo.ContactRepository;
+import xjunz.tool.wechat.impl.repo.MessageRepository;
+import xjunz.tool.wechat.impl.repo.RepositoryFactory;
+import xjunz.tool.wechat.ui.BaseActivity;
+import xjunz.tool.wechat.ui.customview.MessagePanel;
+import xjunz.tool.wechat.ui.main.DetailActivity;
+import xjunz.tool.wechat.ui.message.fragment.EditionFragment;
+import xjunz.tool.wechat.ui.message.fragment.SearchFragment;
+import xjunz.tool.wechat.ui.message.fragment.StatisticsFragment;
+import xjunz.tool.wechat.util.RxJavaUtils;
+import xjunz.tool.wechat.util.UiUtils;
+
+public class MessageActivity extends BaseActivity {
+    public static final String EXTRA_TALKER = "MessageActivity.extra.talker";
+    /**
+     * 初始加载的消息数，不宜也没必要过大，否则可能造成卡顿和内存的浪费
+     */
+    private static final int INITIAL_LOAD_COUNT = 50;
+    /**
+     * 加载更多消息记录的消息数，没必要过多，浪费内存资源且用户一般不会查看这么多记录
+     */
+    private static final int CONSEQUENT_LOAD_COUNT = 100;
+    /**
+     * 加载更多消息时假装加载的时间
+     * <p>因为读取消息记录实际上耗时很，为了防止加载进度条一闪而过的情况，设置
+     * 假装加载时长</p>
+     */
+    private static final long FAKE_LOAD_MILLS = 500L;
+    private Talker mTalker;
+    private RecyclerView mRvMessage;
+    /**
+     * 当前显示的消息数据列表，仅持有{@link MessageViewModel#currentLoadedMessages}的引用，
+     * 切勿赋值给此变量
+     */
+    private List<Message> mMessageList;
+    private MessageRepository mMessageRepo;
+    private ContactRepository mContactRepo;
+    private MessageAdapter mAdapter;
+    private ActivityMessageBinding mBinding;
+    private MessageViewModel mModel;
+    private Fragment[] mPages;
+    /**
+     * 当前需要被导航的消息，此消息来源于{@link SearchFragment}的搜索结果被点击时
+     * 发送的{@link MessageViewModel#notifyNavigate(Message)}事件。接收到此事件后，
+     * 当前消息列表会滑动到此消息的位置，予以导航。
+     */
+    private Message mMessageToNavigate;
+    /**
+     * 需要闪烁提醒的消息索引
+     *
+     * @see MessageAdapter#onBindViewHolder(MessageViewHolder, int, List)
+     */
+    private int mMessageIndexToBlink = -1;
+    private DatabaseModifier mModifier;
+    private MessageEditorViewModel mMessageEditorViewModel;
+    private final MessageViewModel.EventHandler mHandler = new MessageViewModel.EventHandler() {
+        @Override
+        public void onNavigate(Message msg) {
+            super.onNavigate(msg);
+            mBinding.messagePanel.closePanel();
+            mMessageToNavigate = msg;
+        }
+
+        @Override
+        public void onAllLoaded(int preCount) {
+            mAdapter.notifyItemInserted(preCount);
+            if (mBinding.messagePanel.isOpen()) {
+                mBinding.etSearch.requestFocus();
+            }
+        }
+    };
+
+    private final MessageEditorViewModel.EditorEventHandler mEditorEventHandler = new MessageEditorViewModel.EditorEventHandler() {
+        @Override
+        public void onMessageChanged(boolean timestampChanged, Message changed) {
+            mMessageList.remove(mModel.selectedMessagePosition);
+            if (timestampChanged) {
+                mAdapter.notifyItemRemoved(mModel.selectedMessagePosition);
+                int index = Collections.binarySearch(mMessageList, changed, (o1, o2) -> -Long.compare(o1.getCreateTimeStamp(), o2.getCreateTimeStamp()));
+                if (index >= 0) {
+                    mMessageList.add(index + 1, changed);
+                    mAdapter.notifyItemInserted(index + 1);
+                } else {
+                    index = -(index + 1);
+                    mMessageList.add(index, changed);
+                    mAdapter.notifyItemInserted(index);
+                }
+            } else {
+                mMessageList.add(mModel.selectedMessagePosition, changed);
+                mAdapter.notifyItemChanged(mModel.selectedMessagePosition);
+            }
+        }
+
+        @Override
+        public void onMessageInserted(boolean addBefore, Message inserted) {
+            int insertion = addBefore ? mModel.selectedMessagePosition - 1 : mModel.selectedMessagePosition + 1;
+            mMessageList.add(insertion, inserted);
+            mAdapter.notifyItemInserted(insertion);
+        }
+
+        @Override
+        public void onMessageDeleted() {
+            mMessageList.remove(mModel.selectedMessagePosition);
+            mAdapter.notifyItemRemoved(mModel.selectedMessagePosition);
+        }
+    };
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mTalker = (Talker) getIntent().getSerializableExtra(EXTRA_TALKER);
+        if (mTalker == null) {
+            // MasterToast.shortToast("No data passed in, who are u?");
+            finish();
+            return;
+        }
+        mMessageRepo = RepositoryFactory.get(MessageRepository.class);
+        mContactRepo = RepositoryFactory.get(ContactRepository.class);
+        mModifier = Environment.getInstance().modifyDatabase();
+        mBinding = DataBindingUtil.setContentView(this, R.layout.activity_message);
+        mRvMessage = mBinding.rvMessage;
+        mModel = new ViewModelProvider(this, new ViewModelProvider.NewInstanceFactory()).get(MessageViewModel.class);
+        mMessageEditorViewModel = MessageEditorViewModel.get(getApplication());
+        mMessageEditorViewModel.registerEventHandler(mEditorEventHandler);
+        mModel.currentTalker = mTalker;
+        mModel.addEventHandler(mHandler);
+        mMessageList = mModel.currentLoadedMessages;
+        mBinding.setModel(mModel);
+        initList();
+        initPages();
+        initPanel();
+    }
+
+    private void doNavigate(Message msg) {
+        //查找需要导航的消息
+        int index = mMessageList.indexOf(msg);
+        //如果找到
+        if (index >= 0) {
+            //获取当前列表上下边缘的消息索引
+            int f = UiUtils.getFirstVisibleItemIndexOfList(mRvMessage, false);
+            int l = UiUtils.getLastVisibleItemIndexOfList(mRvMessage, false);
+            if (f >= 0 && l >= 0) {
+                //如果存在
+                int span = l - f;
+                if (f <= index && l >= index) {
+                    //且欲导航的位置在这俩之间
+                    //直接滑到该位置并闪烁提示
+                    mRvMessage.smoothScrollToPosition(index);
+                    mAdapter.notifyItemChanged(index, MessageAdapter.PAYLOAD_NAVIGATE);
+                    return;
+                } else if (Math.abs(f - index) <= span * 2 || Math.abs(l - index) <= span * 2) {
+                    //如果欲导航的位置离上下边缘不超过两个屏幕
+                    mMessageIndexToBlink = index;
+                    //平滑地滑动导航到指定位置
+                    mRvMessage.smoothScrollToPosition(index);
+                    return;
+                }
+            }
+            //否则
+            //直接跳到指定位置（不执行滑动动作，太墨迹）
+            mRvMessage.scrollToPosition(index);
+            //在下一帧闪烁提示
+            mRvMessage.post(() -> mAdapter.notifyItemChanged(index, MessageAdapter.PAYLOAD_NAVIGATE));
+        } else {
+            UiUtils.toast("找不到该消息~");
+        }
+    }
+
+    private void initPages() {
+        mPages = new Fragment[3];
+        mPages[0] = new StatisticsFragment();
+        mPages[1] = new EditionFragment();
+        mPages[2] = new SearchFragment();
+        mBinding.vpMessage.setAdapter(new MessageFragmentAdapter(this));
+    }
+
+    private void initPanel() {
+        mBinding.messagePanel.addOnPanelSlideListener(new MessagePanel.OnPanelSlideListener() {
+            @Override
+            public void onPanelSlideFinished(boolean isOpen) {
+                if (!isOpen && mMessageToNavigate != null) {
+                    doNavigate(mMessageToNavigate);
+                    mMessageToNavigate = null;
+                } else if (isOpen) {
+                    if (mModel.hasLoadAll.get()) {
+                        mBinding.etSearch.requestFocus();
+                    }
+                }
+            }
+
+            @Override
+            public void onPanelSlide(float fraction) {
+                //no-op
+            }
+
+            @Override
+            public void onPanelSlideStart(boolean isToOpen) {
+                if (!isToOpen) {
+                    hideIme(mBinding.etSearch);
+                }
+            }
+        });
+    }
+
+    private final Comparator<Message> mBackupComparator = (o1, o2) -> {
+        int comparison = Long.compare(o1.getCreateTimeStamp(), o2.getCreateTimeStamp());
+        return comparison == 0 ? Integer.compare(o1.getMsgId(), o2.getMsgId()) : comparison;
+    };
+
+    private void loadData() {
+        RxJavaUtils.complete(() -> {
+            mModel.actualMessageCount = mMessageRepo.getActualMessageCountOf(mTalker.id);
+            mMessageRepo.queryMessageByTalkerLimit(mTalker.id, INITIAL_LOAD_COUNT, mMessageList);
+            mModel.hasLoadAll.set(mMessageList.size() >= mModel.actualMessageCount);
+            if (mModifier.backupTableExists()) {
+                mMessageRepo.queryBackupMessagesByTalker(mTalker.id, mModel.allBackupMessages);
+                int index;
+                for (BackupMessage backup : mModel.allBackupMessages) {
+                    if ((index = mMessageList.indexOf(backup)) >= 0) {
+                        mMessageList.get(index).setEditionFlag(backup.getEditionFlag());
+                    } else if (backup.getEditionFlag() == Edition.FLAG_REMOVAL) {
+                        int i = Collections.binarySearch(mMessageList, backup, mBackupComparator);
+                        if (i >= 0) {
+                            throw new IllegalArgumentException("Found a deleted message(" + backup.getMsgId() + ") in message list.");
+                        } else {
+                            int insertion = -(i + 1);
+                            if (insertion > 0 || (insertion == 0 && mModel.hasLoadAll.get())) {
+                                mMessageList.add(insertion, backup);
+                            }
+                        }
+                    }
+                }
+            }
+        }).subscribe(new RxJavaUtils.CompletableObservableAdapter() {
+            @Override
+            public void onComplete() {
+                mAdapter = new MessageAdapter();
+                mRvMessage.setAdapter(mAdapter);
+                //回到最底部，显示最新的消息记录（因为是reverseLayout的）
+                mRvMessage.scrollToPosition(0);
+            }
+        });
+    }
+
+    private AvatarScrollHandler mScrollListener;
+
+    private void initList() {
+       /* RxJavaUtils.complete(() -> {
+            mModel.actualMessageCount = mMessageRepo.getActualMessageCountOf(mTalker.id);
+            mMessageRepo.queryMessageByTalkerLimit(mTalker.id, INITIAL_LOAD_COUNT, mMessageList);
+        }).subscribe(new RxJavaUtils.CompletableObservableAdapter() {
+            @Override
+            public void onComplete() {
+                mModel.hasLoadAll.set(mMessageList.size() >= mModel.actualMessageCount);
+                mAdapter = new MessageAdapter();
+                mRvMessage.setAdapter(mAdapter);
+                //回到最底部，显示最新的消息记录（因为是reverseLayout的）
+                mRvMessage.scrollToPosition(0);
+            }
+        });*/
+        loadData();
+        //处理消息的闪烁提示，消息的加载
+        mBinding.rvMessage.addOnScrollListener(new RecyclerView.OnScrollListener() {
+            int formerState = RecyclerView.SCROLL_STATE_IDLE;
+
+            @Override
+            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {
+                super.onScrollStateChanged(recyclerView, newState);
+                if (newState == RecyclerView.SCROLL_STATE_IDLE) {
+                    if (mMessageIndexToBlink >= 0) {
+                        mAdapter.notifyItemChanged(mMessageIndexToBlink, MessageAdapter.PAYLOAD_NAVIGATE);
+                        mMessageIndexToBlink = -1;
+                    }
+                }
+                formerState = newState;
+            }
+
+            @Override
+            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
+                super.onScrolled(recyclerView, dx, dy);
+                //当用户滑动到顶部的时候
+                if (formerState != RecyclerView.SCROLL_STATE_IDLE && !mBinding.rvMessage.canScrollVertically(-1)) {
+                    //如果已经数据已经全部加载完
+                    if (mModel.hasLoadAll.get()) {
+                        //直接返回
+                        return;
+                    }
+                    //否则显示加载进度条
+                    UiUtils.fadeIn(mBinding.pbLoad);
+                    //禁止下拉关闭
+                    mBinding.rvMessage.setNestedScrollingEnabled(false);
+                    RxJavaUtils.single(() -> {
+                        //为了防止加载动画一闪而过造成不好的用户体验，
+                        //假装加载500毫秒，让动画跑一会儿，其实毫秒级加载。
+                        Thread.sleep(FAKE_LOAD_MILLS);
+                        return mMessageRepo.queryMessageByTalkerLimit(mTalker.id, CONSEQUENT_LOAD_COUNT, mMessageList);
+                    }).subscribe(new RxJavaUtils.SingleObserverAdapter<Integer>() {
+                        @Override
+                        public void onSuccess(@NotNull Integer count) {
+                            super.onSuccess(count);
+                            //关闭加载进度条并更新数据
+                            UiUtils.fadeOut(mBinding.pbLoad);
+                            mModel.hasLoadAll.set(mMessageList.size() >= mModel.actualMessageCount);
+                            mAdapter.notifyItemInserted(mMessageList.size() - count);
+                            mBinding.rvMessage.smoothScrollBy(0, -100, new AccelerateDecelerateInterpolator());
+                            mBinding.rvMessage.setNestedScrollingEnabled(true);
+                        }
+                    });
+                }
+            }
+        });
+        getWindow().getSharedElementEnterTransition().addListener(new UiUtils.TransitionListenerAdapter() {
+            @Override
+            public void onTransitionEnd(@NonNull Transition transition) {
+                mScrollListener = new AvatarScrollHandler((LinearLayoutManager) Objects.requireNonNull(mRvMessage.getLayoutManager())) {
+                    @Override
+                    public void notifyAvatarInvisible(int position) {
+                        mAdapter.mInvisibleAvatarIndex = position;
+                    }
+
+                    @Override
+                    public void notifyAvatarVisible() {
+                        mAdapter.mInvisibleAvatarIndex = -1;
+                    }
+                };
+                mRvMessage.addOnScrollListener(mScrollListener);
+            }
+        });
+        getWindow().getSharedElementReturnTransition().addListener(new UiUtils.TransitionListenerAdapter() {
+
+            @Override
+            public void onTransitionStart(@NonNull Transition transition) {
+                mRvMessage.removeOnScrollListener(mScrollListener);
+            }
+        });
+    }
+
+
+    @Override
+    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
+        super.onCreateContextMenu(menu, v, menuInfo);
+        getMenuInflater().inflate(R.menu.message, menu);
+    }
+
+    @SuppressLint("NonConstantResourceId")
+    @Override
+    public boolean onContextItemSelected(@NonNull MenuItem item) {
+        mModifier = getEnvironment().modifyDatabase();
+        mBinding.setModifier(mModifier);
+        Message selectedMessage = mModel.getSelectedMessage();
+        mMessageEditorViewModel.passMessageToEdit(selectedMessage);
+        switch (item.getItemId()) {
+            case R.id.item_add_before:
+                Intent intentAddBefore = new Intent(this, EditorActivity.class);
+                intentAddBefore.putExtra(EditorActivity.EXTRA_EDIT_MODE, EditorViewModel.EDIT_MODE_ADD_BEFORE);
+                if (mModel.selectedMessagePosition < mMessageList.size() - 1) {
+                    Message before = mMessageList.get(mModel.selectedMessagePosition + 1);
+                    intentAddBefore.putExtra(EditorActivity.EXTRA_SEND_TIMESTAMP_START, before.getCreateTimeStamp());
+                }
+                intentAddBefore.putExtra(EditorActivity.EXTRA_SEND_TIMESTAMP_STOP, selectedMessage.getCreateTimeStamp());
+                startActivity(intentAddBefore);
+                break;
+            case R.id.item_add_after:
+                Intent intentAddAfter = new Intent(this, EditorActivity.class);
+                intentAddAfter.putExtra(EditorActivity.EXTRA_EDIT_MODE, EditorViewModel.EDIT_MODE_ADD_AFTER);
+                if (mModel.selectedMessagePosition > 0) {
+                    Message after = mMessageList.get(mModel.selectedMessagePosition - 1);
+                    intentAddAfter.putExtra(EditorActivity.EXTRA_SEND_TIMESTAMP_STOP, after.getCreateTimeStamp());
+                }
+                intentAddAfter.putExtra(EditorActivity.EXTRA_SEND_TIMESTAMP_START, selectedMessage.getCreateTimeStamp());
+                startActivity(intentAddAfter);
+                break;
+            case R.id.item_delete:
+                mModifier.putPendingEdition(Edition.remove(selectedMessage));
+                mMessageEditorViewModel.notifyMessageDeleted();
+                break;
+            case R.id.item_edit:
+                Intent intentEdit = new Intent(this, EditorActivity.class);
+                intentEdit.putExtra(EditorActivity.EXTRA_EDIT_MODE, EditorViewModel.EDIT_MODE_EDIT);
+                startActivity(intentEdit);
+                break;
+            case R.id.item_check:
+                UiUtils.createDialog(this, mModel.selectedMessagePosition + "",
+                        mModel.getSelectedMessage() == null ? "null" : mModel.getSelectedMessage().toSpannedString()).show();
+                break;
+        }
+        return super.onContextItemSelected(item);
+    }
+
+    private class MessageFragmentAdapter extends FragmentStateAdapter {
+        MessageFragmentAdapter(FragmentActivity fragmentActivity) {
+            super(fragmentActivity);
+        }
+
+        @NonNull
+        @Override
+        public Fragment createFragment(int position) {
+            return mPages[position];
+        }
+
+
+        @Override
+        public int getItemCount() {
+            return mPages.length;
+        }
+    }
+
+    private class MessageAdapter extends RecyclerView.Adapter<MessageViewHolder> {
+        private final int FLAG_IS_SEND = 13;
+        private final int ITEM_TYPE_PLAIN = 1;
+        private final int ITEM_TYPE_SYSTEM = 2;
+        private final int ITEM_TYPE_COMPLEX = 3;
+        private static final int POSITION_TYPE_TOP = 2;
+        private static final int POSITION_TYPE_BOTTOM = 0;
+        private static final int POSITION_TYPE_CENTER = 1;
+        private static final int POSITION_TYPE_SINGLE = -1;
+        private final int SEPARATOR_MILLS = 5 * 60 * 1000;
+        private int mInvisibleAvatarIndex = -1;
+        private static final int PAYLOAD_NAVIGATE = 0;
+        private static final int PAYLOAD_HIDE_AVATAR = 1;
+        private static final int PAYLOAD_SHOW_AVATAR = 2;
+
+        private boolean isSend(int compositeType) {
+            return compositeType % FLAG_IS_SEND == 0;
+        }
+
+        private int getType(int compositeType) {
+            return compositeType / (isSend(compositeType) ? FLAG_IS_SEND : 1);
+        }
+
+        private int getResOf(int compositeType) {
+            boolean left = !isSend(compositeType);
+            int type = getType(compositeType);
+            switch (type) {
+                case ITEM_TYPE_SYSTEM:
+                    return R.layout.item_bubble_system;
+                case ITEM_TYPE_COMPLEX:
+                    return left ? R.layout.item_bubble_cl : R.layout.item_bubble_cr;
+                case ITEM_TYPE_PLAIN:
+                    return left ? R.layout.item_bubble_pl : R.layout.item_bubble_pr;
+
+            }
+            throw new IllegalArgumentException("No such type: " + compositeType);
+        }
+
+        @Override
+        public int getItemViewType(int position) {
+            Message message = mMessageList.get(position);
+            MessageFactory.Type type = message.getType();
+            if (message.getType() == MessageFactory.Type.SYSTEM) {
+                return ITEM_TYPE_SYSTEM;
+            } else {
+                if (type.isComplex()) {
+                    return (message.isSend() ? FLAG_IS_SEND : 1) * ITEM_TYPE_COMPLEX;
+                } else {
+                    return (message.isSend() ? FLAG_IS_SEND : 1) * ITEM_TYPE_PLAIN;
+                }
+            }
+        }
+
+        @NonNull
+        @Override
+        public MessageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+            ViewDataBinding binding = DataBindingUtil.inflate(getLayoutInflater(), getResOf(viewType), parent, false);
+            return new MessageViewHolder(binding);
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull MessageViewHolder holder, int position, @NonNull List<Object> payloads) {
+            if (payloads.size() > 0) {
+                int payload = (int) payloads.get(0);
+                switch (payload) {
+                    case PAYLOAD_NAVIGATE:
+                        View container = holder.binding.getRoot().findViewById(R.id.msg_container);
+                        container.setPressed(true);
+                        container.setPressed(false);
+                        break;
+                    case PAYLOAD_HIDE_AVATAR:
+                       /* mInvisibleAvatarIndex = position;
+                        holder.binding.getRoot().findViewById(R.id.iv_avatar).setVisibility(View.INVISIBLE);*/
+                        break;
+                    case PAYLOAD_SHOW_AVATAR:
+                        /*mInvisibleAvatarIndex = -1;
+                        holder.binding.getRoot().findViewById(R.id.iv_avatar).setVisibility(View.VISIBLE);
+                        */
+                        break;
+                }
+            } else {
+                super.onBindViewHolder(holder, position, payloads);
+            }
+        }
+
+        private boolean isLegalNeighborWithNext(int position, Message cur) {
+            if (position != 0) {
+                Message nex = mMessageList.get(position - 1);
+                return (nex.getSenderId() != null && nex.getSenderId().equals(cur.getSenderId())) && Math.abs(nex.getCreateTimeStamp() - cur.getCreateTimeStamp()) <= SEPARATOR_MILLS;
+            }
+            return false;
+        }
+
+        private boolean isLegalNeighborWithPrevious(int position, Message cur) {
+            if (position != mMessageList.size() - 1) {
+                Message pre = mMessageList.get(position + 1);
+                return (pre.getSenderId() != null && pre.getSenderId().equals(cur.getSenderId())) && Math.abs(pre.getCreateTimeStamp() - cur.getCreateTimeStamp()) <= SEPARATOR_MILLS;
+            }
+            return false;
+        }
+
+
+        private int getPositionType(int position, Message cur) {
+            if (isLegalNeighborWithNext(position, cur)) {
+                if (isLegalNeighborWithPrevious(position, cur)) {
+                    return POSITION_TYPE_CENTER;
+                } else {
+                    return POSITION_TYPE_TOP;
+                }
+            } else {
+                if (isLegalNeighborWithPrevious(position, cur)) {
+                    return POSITION_TYPE_BOTTOM;
+                } else {
+                    return POSITION_TYPE_SINGLE;
+                }
+            }
+        }
+
+        @Nullable
+        private Account getAccount(@NotNull Message message) {
+            if (!message.getType().isSystem()) {
+                if (message.isSend()) {
+                    return getCurrentUser();
+                } else {
+                    return message.isInGroupChat() ? message.getSenderAccount() : mTalker;
+                }
+            }
+            return null;
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull MessageViewHolder holder, int position) {
+            Message message = mMessageList.get(position);
+            holder.binding.setVariable(BR.message, message);
+            holder.binding.setVariable(BR.positionType, getPositionType(position, message));
+            holder.binding.setVariable(BR.account, getAccount(message));
+            if (holder.ivAvatar != null) {
+                holder.ivAvatar.setVisibility(position == mInvisibleAvatarIndex ? View.INVISIBLE : View.VISIBLE);
+            }
+            holder.binding.executePendingBindings();
+        }
+
+        @Override
+        public int getItemCount() {
+            return mMessageList.size();
+        }
+    }
+
+    public class MessageViewHolder extends RecyclerView.ViewHolder {
+        ViewDataBinding binding;
+        ImageView ivAvatar;
+
+        public void gotoDetail(View view) {
+            Intent intent = new Intent(MessageActivity.this, DetailActivity.class);
+            intent.putExtra(DetailActivity.EXTRA_CONTACT_ID, mMessageList.get(getAdapterPosition()).requireSenderId());
+            startActivity(intent, ActivityOptions.makeSceneTransitionAnimation(MessageActivity.this, view, view.getTransitionName()).toBundle());
+        }
+
+        public MessageViewHolder(@NonNull ViewDataBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+            ivAvatar = itemView.findViewById(R.id.iv_avatar);
+            this.binding.setVariable(BR.model, mModel);
+            // this.itemView.findViewById(R.id.msg_container).setOnClickListener();
+        }
+
+    }
+
+    @Override
+    public void onBackPressed() {
+        if (mBinding.messagePanel.isOpen()) {
+            mBinding.messagePanel.closePanel();
+        } else {
+            mModifier.removeAllPendingEditions();
+            mMessageEditorViewModel.purge();
+            super.onBackPressed();
+        }
+    }
+}
Index: app/src/main/java/xjunz/tool/wechat/impl/model/message/UnsupportedMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/model/message/UnsupportedMessage.java	(date 1596110828572)
+++ app/src/main/java/xjunz/tool/wechat/impl/model/message/UnsupportedMessage.java	(date 1596110828572)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.model.message;
+
+import android.content.ContentValues;
+import android.text.Html;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+
+public class UnsupportedMessage extends Message {
+
+    public UnsupportedMessage(ContentValues values) {
+        super(values);
+    }
+
+    @NonNull
+    @Override
+    public String getParsedContent() {
+        return getType().getCaption();
+    }
+
+    @NonNull
+    @Override
+    public CharSequence getSpannedContent() {
+        return Html.fromHtml("<i>&lt;" + getParsedContent() + "&gt;</i>");
+    }
+}
Index: app/src/main/res/transition/detail_shared_enter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<transitionSet xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:duration=\"@android:integer/config_shortAnimTime\"\r\n    android:interpolator=\"@android:interpolator/fast_out_slow_in\">\r\n    <autoTransition>\r\n        <targets>\r\n            <target android:targetId=\"@+id/iv_avatar\" />\r\n        </targets>\r\n        <arcMotion />\r\n    </autoTransition>\r\n</transitionSet>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/transition/detail_shared_enter.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/transition/detail_shared_enter.xml	(date 1594830944456)
@@ -6,9 +6,9 @@
     android:duration="@android:integer/config_shortAnimTime"
     android:interpolator="@android:interpolator/fast_out_slow_in">
     <autoTransition>
-        <targets>
-            <target android:targetId="@+id/iv_avatar" />
-        </targets>
-        <arcMotion />
-    </autoTransition>
+        <arcMotion />
+    </autoTransition>
+    <targets>
+        <target android:targetId="@+id/iv_avatar" />
+    </targets>
 </transitionSet>
\ No newline at end of file
Index: app/src/main/res/values/content_desc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<resources>\r\n    <string name=\"cd_no_result\">No Result</string>\r\n    <string name=\"cd_bottom_bar_item\">Bottom Bar Item</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/content_desc.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/values/content_desc.xml	(date 1594828336806)
@@ -5,4 +5,6 @@
 <resources>
     <string name="cd_no_result">No Result</string>
     <string name="cd_bottom_bar_item">Bottom Bar Item</string>
+    <string name="cd_shutter">展开/收起</string>
+    <string name="cd_avatar">Avatar</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/transition/image_viewer_shared_enter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<transitionSet xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:duration=\"@android:integer/config_shortAnimTime\"\r\n    android:interpolator=\"@android:interpolator/fast_out_slow_in\">\r\n    <changeBounds />\r\n    <changeImageTransform />\r\n    <changeClipBounds />\r\n    <targets>\r\n        <target android:targetId=\"@+id/photo_view\" />\r\n    </targets>\r\n\r\n</transitionSet>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/transition/image_viewer_shared_enter.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/transition/image_viewer_shared_enter.xml	(date 1594831352367)
@@ -8,8 +8,12 @@
     <changeBounds />
     <changeImageTransform />
     <changeClipBounds />
+    <transition xmlns:app="http://schemas.android.com/apk/res-auto"
+        class="xjunz.tool.wechat.ui.transition.ChangeCorners"
+        app:endCornerRadius="0dp"
+        app:startCornerRadius="@dimen/r_fab_normal" />
     <targets>
-        <target android:targetId="@+id/photo_view" />
+        <target android:targetId="@+id/iv_avatar" />
     </targets>
 
 </transitionSet>
\ No newline at end of file
Index: app/src/main/res/transition/message_shared_enter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/transition/message_shared_enter.xml	(date 1594796113618)
+++ app/src/main/res/transition/message_shared_enter.xml	(date 1594796113618)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<transitionSet xmlns:android="http://schemas.android.com/apk/res/android"
+    android:interpolator="@android:interpolator/fast_out_slow_in">
+    <transition xmlns:app="http://schemas.android.com/apk/res-auto"
+        style="@style/Widget.AppCompat.Button.Borderless.Colored"
+        class="xjunz.tool.wechat.ui.transition.GenericButtonMorph"
+        android:drawableLeft="@drawable/ic_baseline_eye_24"
+        android:duration="@integer/animDurationNormal"
+        android:text="@string/check_msg"
+        android:textColor="?colorAccent"
+        app:opticalButtonColor="?android:colorBackground" />
+    <targets>
+        <target android:targetId="@+id/rv_message" />
+    </targets>
+</transitionSet>
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/impl/model/message/ComplexMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/model/message/ComplexMessage.java	(date 1605514065287)
+++ app/src/main/java/xjunz/tool/wechat/impl/model/message/ComplexMessage.java	(date 1605514065287)
@@ -0,0 +1,310 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.model.message;
+
+import android.content.ContentValues;
+import android.text.TextUtils;
+import android.util.Log;
+
+import androidx.annotation.CheckResult;
+import androidx.annotation.NonNull;
+
+import org.jetbrains.annotations.NotNull;
+import org.xml.sax.Attributes;
+import org.xml.sax.SAXException;
+import org.xml.sax.helpers.DefaultHandler;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.parsers.SAXParser;
+import javax.xml.parsers.SAXParserFactory;
+
+import xjunz.tool.wechat.impl.repo.ComplexMessageRepository;
+import xjunz.tool.wechat.impl.repo.RepositoryFactory;
+
+public class ComplexMessage extends Message {
+    /**
+     * 消息显示的样式
+     * 0：普通显示
+     * 1：横向全屏显示
+     */
+    private int showType;
+    private String title, description, parsedContent;
+    /**
+     * 是否已填充，即是否从数据库中查询过此消息，懒加载的标识
+     *
+     * @see ComplexMessageRepository#fulfillComplexMessage(ComplexMessage)
+     */
+    private boolean hasFulfilled;
+    /**
+     * 是否成功从数据库中查询到此消息，未成功查询到的消息会执行内容解析
+     */
+    private boolean hasFound;
+    /**
+     * 是否已解析，懒解析的标识
+     */
+    private boolean hasParsed;
+    /**
+     * 消息来源（如分享的源应用程序）
+     */
+    private String source;
+    /**
+     * 消息类型亚类，数据库的"type"字段查询到的值
+     *
+     * @see MessageFactory 的"SUBTYPE_"常量
+     */
+    private int rawSubtype = -1;
+    /**
+     * 消息类型亚类
+     *
+     * @see MessageFactory.Type
+     */
+    private MessageFactory.Type subtype;
+
+    public ComplexMessage(ContentValues values) {
+        super(values);
+    }
+
+    public void setTitle(@NonNull String title) {
+        this.title = title;
+    }
+
+    public void setDescription(@NonNull String description) {
+        this.description = description;
+    }
+
+
+    @NonNull
+    public String getTitle() {
+        fulfillUnless();
+        parseUnless();
+        return title;
+    }
+
+    @NonNull
+    public String getDescription() {
+        fulfillUnless();
+        parseUnless();
+        return description;
+    }
+
+
+    /**
+     * 返回解析后的内容
+     * <p>
+     * {@link ComplexMessage#getTitle()}+换行+{@link ComplexMessage#getDescription()}
+     * </p>
+     *
+     * @return 解析后的内容
+     */
+    @NonNull
+    @Override
+    public String getParsedContent() {
+        if (parsedContent == null) {
+            StringBuilder sb = new StringBuilder();
+            if (!TextUtils.isEmpty(getTitle())) {
+                sb.append(getTitle());
+                if (!TextUtils.isEmpty(getDescription())) {
+                    sb.append("\n").append(getDescription());
+                }
+            } else {
+                if (!TextUtils.isEmpty(getDescription())) {
+                    sb.append(getDescription());
+                }
+            }
+            parsedContent = sb.toString();
+        }
+        return parsedContent;
+    }
+
+    @NonNull
+    @Override
+    public CharSequence getSpannedContent() {
+        return getParsedContent();
+    }
+
+    public String getSource() {
+        fulfillUnless();
+        parseUnless();
+        return source;
+    }
+
+
+    public void setSource(String source) {
+        this.source = source;
+    }
+
+
+    public int getRawSubtype() {
+        fulfillUnless();
+        parseUnless();
+        return rawSubtype;
+    }
+
+    private void setSubtype(MessageFactory.Type subtype) {
+        this.subtype = subtype;
+    }
+
+    public void setRawSubtype(int rawSubtype) {
+        this.rawSubtype = rawSubtype;
+        setSubtype(judgeSubtype(rawSubtype));
+    }
+
+
+    @NonNull
+    public MessageFactory.Type getSubtype() {
+        fulfillUnless();
+        parseUnless();
+        return subtype;
+    }
+
+    private void fulfillUnless() {
+        if (!hasFulfilled) {
+            hasFound = RepositoryFactory.get(ComplexMessageRepository.class).fulfillComplexMessage(this);
+            hasFulfilled = true;
+        }
+    }
+
+    private void parseUnless() {
+        if (!hasFound && !hasParsed) {
+            parseMessage();
+        }
+    }
+
+    @NonNull
+    @CheckResult
+    private MessageFactory.Type judgeSubtype(int rawSubtype) {
+        switch (rawSubtype) {
+            case MessageFactory.SUBTYPE_FILE:
+                return MessageFactory.Type.FILE;
+            case MessageFactory.SUBTYPE_HB:
+                return MessageFactory.Type.HB;
+            case MessageFactory.SUBTYPE_GIF:
+                return MessageFactory.Type.GIF;
+            case MessageFactory.SUBTYPE_IMAGE:
+                return MessageFactory.Type.IMAGE;
+            case MessageFactory.SUBTYPE_MUSIC:
+                return MessageFactory.Type.MUSIC;
+            case MessageFactory.SUBTYPE_POSITION_SHARE:
+                return MessageFactory.Type.POSITION_SHARE;
+            case MessageFactory.SUBTYPE_REPLY:
+                return MessageFactory.Type.REPLY;
+            case MessageFactory.SUBTYPE_REPOST:
+                return MessageFactory.Type.REPOST;
+            case MessageFactory.SUBTYPE_SHARE:
+                return MessageFactory.Type.SHARE;
+            case MessageFactory.SUBTYPE_TRANSFER:
+                return MessageFactory.Type.TRANSFER;
+            case MessageFactory.SUBTYPE_URL:
+            case MessageFactory.SUBTYPE_1:
+            case MessageFactory.SUBTYPE_46:
+                return MessageFactory.Type.SHARED_URL;
+            case MessageFactory.SUBTYPE_GAME:
+            case MessageFactory.SUBTYPE_WCX:
+                return MessageFactory.Type.WCX_SHARED;
+            case MessageFactory.SUBTYPE_VIDEO:
+                return MessageFactory.Type.VIDEO;
+        }
+        if (getType().isComplex()) {
+            return getType();
+        }
+        return MessageFactory.Type.OTHERS;
+    }
+
+    private void parseMessage() {
+        SAXParserFactory factory = SAXParserFactory.newInstance();
+        try {
+            SAXParser parser = factory.newSAXParser();
+            ComplexMessageHandler handler = new ComplexMessageHandler();
+            parser.parse(new ByteArrayInputStream(content.getBytes()), handler);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            setSubtype(getType());
+            e.printStackTrace();
+        } finally {
+            hasParsed = true;
+        }
+    }
+
+    private class ComplexMessageHandler extends DefaultHandler {
+        private String currentQName = "";
+        private boolean firstTitle = true, firstDes = true, firstAppName = true, firstType = true, firstSourceDisplayName = true;
+        private final StringBuilder mTitle = new StringBuilder();
+        private final StringBuilder mDes = new StringBuilder();
+        private String mSource;
+        private int mType = -1;
+
+        private void notifyNotFirst(@NotNull String qName) {
+            switch (qName) {
+                case "title":
+                    firstTitle = false;
+                    break;
+                case "des":
+                    firstDes = false;
+                    break;
+                case "type":
+                    firstType = false;
+                    break;
+                case "appname":
+                    firstAppName = false;
+                    break;
+                case "sourcedisplayname":
+                    firstSourceDisplayName = false;
+                    break;
+            }
+        }
+
+        @Override
+        public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
+            super.startElement(uri, localName, qName, attributes);
+            currentQName = qName;
+        }
+
+        @Override
+        public void endElement(String uri, String localName, String qName) throws SAXException {
+            super.endElement(uri, localName, qName);
+            notifyNotFirst(qName);
+            currentQName = "";
+        }
+
+        @Override
+        public void endDocument() throws SAXException {
+            super.endDocument();
+            if (getMsgId() == 653) {
+                Log.i("xjunz-", mTitle.toString());
+            }
+            setTitle(mTitle.toString());
+            setDescription(mDes.toString());
+            setRawSubtype(mType);
+            setSource(mSource);
+            // setSubtype(judgeSubtype(mType));
+        }
+
+        @Override
+        public void characters(char[] ch, int start, int length) throws SAXException {
+            super.characters(ch, start, length);
+            String text = new String(ch, start, length);
+            if (firstTitle && "title".equals(currentQName)) {
+                mTitle.append(text);
+            } else if (firstDes && "des".equals(currentQName)) {
+                mDes.append(text);
+            } else if (firstType && "type".equals(currentQName)) {
+                try {
+                    this.mType = Integer.parseInt(text);
+                } catch (NumberFormatException e) {
+                    e.printStackTrace();
+                }
+            } else if (firstSourceDisplayName && "sourcedisplayname".equals(currentQName)) {
+                if (TextUtils.isEmpty(mSource)) {
+                    mSource = text;
+                }
+            } else if (firstAppName && "appname".equals(currentQName)) {
+                if (TextUtils.isEmpty(mSource)) {
+                    mSource = text;
+                }
+            }
+        }
+    }
+}
Index: app/src/main/java/xjunz/tool/wechat/ui/message/fragment/SearchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/message/fragment/SearchFragment.java	(date 1602839657872)
+++ app/src/main/java/xjunz/tool/wechat/ui/message/fragment/SearchFragment.java	(date 1602839657872)
@@ -0,0 +1,289 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.ui.message.fragment;
+
+import android.os.Bundle;
+import android.text.TextUtils;
+import android.util.Pair;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.databinding.DataBindingUtil;
+import androidx.fragment.app.Fragment;
+import androidx.lifecycle.ViewModelProvider;
+import androidx.recyclerview.widget.RecyclerView;
+
+import org.reactivestreams.Publisher;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Objects;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
+import io.reactivex.BackpressureStrategy;
+import io.reactivex.Flowable;
+import io.reactivex.FlowableOnSubscribe;
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.disposables.Disposable;
+import io.reactivex.functions.Consumer;
+import io.reactivex.functions.Function;
+import io.reactivex.schedulers.Schedulers;
+import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.data.viewmodel.MessageViewModel;
+import xjunz.tool.wechat.databinding.FragmentSearchBinding;
+import xjunz.tool.wechat.databinding.ItemMessageSearchResultBinding;
+import xjunz.tool.wechat.impl.Environment;
+import xjunz.tool.wechat.impl.model.account.Account;
+import xjunz.tool.wechat.impl.model.account.Talker;
+import xjunz.tool.wechat.impl.model.message.Message;
+import xjunz.tool.wechat.impl.repo.ContactRepository;
+import xjunz.tool.wechat.impl.repo.MessageRepository;
+import xjunz.tool.wechat.impl.repo.RepositoryFactory;
+import xjunz.tool.wechat.util.UiUtils;
+
+/**
+ * 承载消息搜索功能和显示搜索结果的{@link Fragment}
+ */
+public class SearchFragment extends Fragment {
+    /**
+     * 所有消息列表，此变量仅持有{@link MessageViewModel#currentLoadedMessages}的引用，请勿给此变量复制
+     */
+    private List<Message> mAllMessages;
+    /**
+     * 当前搜索结果
+     */
+    private final List<MessageItem> mSearchResult = new ArrayList<>();
+    /**
+     * 加载所有消息的{@link Disposable}
+     */
+    private Disposable mLoadAllDisposable;
+    /**
+     * 搜索消息的{@link Disposable}
+     */
+    private Disposable mSearchDisposable;
+    /**
+     * 当前功能模块的数据模型对象
+     */
+    private MessageViewModel mModel;
+    /**
+     * 当前页面的{@link androidx.databinding.ViewDataBinding}实例
+     */
+    private FragmentSearchBinding mBinding;
+    /**
+     * 搜索列表的{@link androidx.recyclerview.widget.RecyclerView.Adapter}
+     */
+    private MessageResultAdapter mAdapter;
+    /**
+     * {@link xjunz.tool.wechat.ui.message.MessageActivity}发送的事件的处理者
+     */
+    private final MessageViewModel.EventHandler mHandler = new MessageViewModel.EventHandler() {
+        @Override
+        public void onSearch(String keyword) {
+            super.onSearch(keyword);
+            doSearch(keyword);
+        }
+
+    };
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mModel = new ViewModelProvider(requireActivity(), new ViewModelProvider.NewInstanceFactory()).get(MessageViewModel.class);
+        mModel.addEventHandler(mHandler);
+    }
+
+
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        mBinding = DataBindingUtil.inflate(inflater, R.layout.fragment_search, container, false);
+        loadAllMessages();
+        return mBinding.getRoot();
+    }
+
+
+    /**
+     * 并发加载所有的消息记录，默认的并发线程数为CPU核心数+1
+     */
+    private void loadAllMessages() {
+        //获取已加载的消息列表
+        mAllMessages = mModel.currentLoadedMessages;
+        //如果以及全部加载完，直接返回
+        if (mModel.hasLoadAll.get()) {
+            return;
+        }
+        //否则设置并发数
+        int defaultGroupCount = Runtime.getRuntime().availableProcessors() + 1;
+        //获取已经加载的消息数
+        int preloadedCount = mModel.currentLoadedMessages.size();
+        //获取需要加载的消息数（总消息数减去已加载的消息数）
+        int msgCount = mModel.actualMessageCount - preloadedCount;
+        //每个线程平均要加载的消息数
+        int unitCount = msgCount / defaultGroupCount;
+        //初始化ExecutorService
+        ExecutorService executor = Executors.newFixedThreadPool(defaultGroupCount);
+        //显示进度条
+        if (mBinding.pbLoad.getVisibility() != View.VISIBLE) {
+            UiUtils.fadeIn(mBinding.pbLoad);
+        }
+        mLoadAllDisposable = Flowable.range(0, defaultGroupCount).map(groupOrdinal -> {
+            //返回每个线程需要加载的消息起点和消息数
+            //最后一个分组需要多加载平均分后剩余的消息数
+            int offset = unitCount * groupOrdinal;
+            int count = unitCount;
+            if (groupOrdinal == defaultGroupCount - 1) {
+                count = msgCount - (groupOrdinal) * unitCount;
+            }
+            return new Pair<>(offset + preloadedCount, count);
+        })
+                .parallel()
+                .runOn(Schedulers.from(executor))
+                .flatMap(offsetLimitPair -> Flowable.create((FlowableOnSubscribe<List<Message>>) emitter -> {
+                    if (offsetLimitPair.second != 0) {
+                        //从数据库加载消息
+                        emitter.onNext(RepositoryFactory.get(MessageRepository.class).queryMessageByTalkerLimit(mModel.currentTalker.id, offsetLimitPair.first, offsetLimitPair.second));
+                    }
+                    emitter.onComplete();
+                }, BackpressureStrategy.BUFFER))
+                .sequential()
+                .observeOn(AndroidSchedulers.mainThread())
+                //对消息进行排序，并行加载的消息是无序的
+                .sorted((o1, o2) -> -Long.compare(o1.get(0).getCreateTimeStamp(), o2.get(0).getCreateTimeStamp()))
+                .subscribe(messages -> {
+                    //添加进消息列表
+                    mAllMessages.addAll(messages);
+                }, throwable -> {
+                    throwable.printStackTrace();
+                    executor.shutdown();
+                    UiUtils.fadeOut(mBinding.pbLoad);
+                }, () -> {
+                    //通知更新
+                    mModel.notifyAllLoaded(preloadedCount);
+                    executor.shutdown();
+                    UiUtils.fadeOut(mBinding.pbLoad);
+                });
+    }
+
+    /**
+     * 并发搜索包含关键词{@param keyword}的所有消息记录
+     *
+     * @param keyword 关键词
+     */
+    private void doSearch(String keyword) {
+        //如果上一个搜索任务还没完成，直接取消
+        if (mSearchDisposable != null && !mSearchDisposable.isDisposed()) {
+            mSearchDisposable.dispose();
+        }
+        //清空搜索结果
+        mSearchResult.clear();
+        //如果关键词是空的，清除列表，显示占位图
+        if (TextUtils.isEmpty(keyword)) {
+            mAdapter.notifyDataSetChanged();
+            UiUtils.fadeIn(mBinding.ivNoResult);
+            return;
+        }
+        //显示进度条
+        if (mBinding.pbLoad.getVisibility() != View.VISIBLE) {
+            UiUtils.fadeIn(mBinding.pbLoad);
+        }
+        //并行发射所有消息
+        mSearchDisposable = Flowable.fromIterable(mAllMessages)
+                .parallel()
+                .runOn(Schedulers.computation())
+                .flatMap((Function<Message, Publisher<MessageItem>>) message -> Flowable.create((FlowableOnSubscribe<MessageItem>) emitter -> {
+                    //检查是否还有关键词，有的话通过筛选
+                    String content = message.getParsedContent();
+                    int index;
+                    if ((index = content.indexOf(keyword)) >= 0) {
+                        MessageItem item = new MessageItem(message);
+                        item.spanLength = keyword.length();
+                        item.spanStartIndex = index;
+                        emitter.onNext(item);
+                    }
+                    emitter.onComplete();
+                }, BackpressureStrategy.BUFFER))
+                .sequential()
+                //对过滤出的消息进行排序（按时间逆序->从新到旧）
+                .sorted((o1, o2) -> -Long.compare(o1.message.getCreateTimeStamp(), o2.message.getCreateTimeStamp()))
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(mSearchResult::add, Throwable::printStackTrace, () -> {
+                    //更新列表
+                    if (mAdapter == null) {
+                        mAdapter = new MessageResultAdapter();
+                        mBinding.rvResult.setAdapter(mAdapter);
+                    } else {
+                        mAdapter.notifyDataSetChanged();
+                    }
+                    //如果没搜到东西，显示展占位图
+                    if (mAdapter.getItemCount() == 0) {
+                        UiUtils.fadeIn(mBinding.ivNoResult);
+                    } else {
+                        UiUtils.invisible(mBinding.ivNoResult);
+                    }
+                    //隐藏进度条
+                    UiUtils.fadeOut(mBinding.pbLoad);
+                });
+    }
+
+    /**
+     * 用于显示搜索结果的的数据项实体类，包装了{@link Message}和搜索
+     * 关键字的所在的索引和长度，用于显示{@link android.text.Spanned}
+     */
+    public static class MessageItem {
+        public Message message;
+        public int spanStartIndex, spanLength;
+
+        public MessageItem(Message message) {
+            this.message = message;
+            this.spanStartIndex = -1;
+            this.spanLength = -1;
+        }
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        if (mLoadAllDisposable != null && !mLoadAllDisposable.isDisposed()) {
+            mLoadAllDisposable.dispose();
+        }
+        if (mSearchDisposable != null && !mSearchDisposable.isDisposed()) {
+            mSearchDisposable.dispose();
+        }
+    }
+
+    private class MessageResultAdapter extends RecyclerView.Adapter<MessageResultViewHolder> {
+
+        @NonNull
+        @Override
+        public MessageResultViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+            ItemMessageSearchResultBinding binding = DataBindingUtil.inflate(getLayoutInflater(), R.layout.item_message_search_result, parent, false);
+            return new MessageResultViewHolder(binding);
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull MessageResultViewHolder holder, int position) {
+            holder.binding.setItem( mSearchResult.get(position));
+            holder.binding.executePendingBindings();
+        }
+
+        @Override
+        public int getItemCount() {
+            return mSearchResult.size();
+        }
+    }
+
+    private class MessageResultViewHolder extends RecyclerView.ViewHolder {
+        ItemMessageSearchResultBinding binding;
+
+        public MessageResultViewHolder(@NonNull ItemMessageSearchResultBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+            this.binding.setModel(mModel);
+        }
+    }
+}
Index: app/src/main/java/xjunz/tool/wechat/ui/message/fragment/StatisticsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/message/fragment/StatisticsFragment.java	(date 1595075803400)
+++ app/src/main/java/xjunz/tool/wechat/ui/message/fragment/StatisticsFragment.java	(date 1595075803400)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.ui.message.fragment;
+
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.databinding.DataBindingUtil;
+import androidx.fragment.app.Fragment;
+
+import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.databinding.FragmentStatsBinding;
+
+public class StatisticsFragment extends Fragment {
+
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        FragmentStatsBinding binding = DataBindingUtil.inflate(inflater, R.layout.fragment_stats, container, false);
+        return binding.getRoot();
+    }
+
+
+}
Index: app/src/main/java/xjunz/tool/wechat/impl/model/message/MessageFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/model/message/MessageFactory.java	(date 1604411951819)
+++ app/src/main/java/xjunz/tool/wechat/impl/model/message/MessageFactory.java	(date 1604411951819)
@@ -0,0 +1,231 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.model.message;
+
+import android.content.ContentValues;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.StringRes;
+
+import org.jetbrains.annotations.NotNull;
+
+import xjunz.tool.wechat.App;
+import xjunz.tool.wechat.R;
+
+/**
+ * 消息工厂，用于“生产”{@link Message}对象
+ */
+public final class MessageFactory {
+
+    //普通文本
+    protected static final int TYPE_PLAIN_MSG = 1;
+    //普通图片
+    protected static final int TYPE_IMAGE = 3;
+    //语音
+    protected static final int TYPE_VOICE = 34;
+    //好友
+    protected static final int TYPE_RECOMMEND = 42;
+    //视频
+    protected static final int TYPE_VIDEO = 43;
+    //表情图片
+    protected static final int TYPE_EMOJI = 47;
+    //位置
+    protected static final int TYPE_LOCATION = 48;
+    //分享
+    protected static final int TYPE_SHARE = 49;
+    //语音通话
+    protected static final int TYPE_CALL = 50;
+    //语音通话相关系统通知（如语音通话已结束通知）
+    protected static final int TYPE_SYSTEM_CALL = 64;
+    //系统通知（如撤回通知）
+    protected static final int TYPE_SYSTEM = 10000;
+    //请求位置信息
+    protected static final int TYPE_SYSTEM_POSITION_REQUEST = 10002;
+    //GIF图片
+    protected static final int TYPE_GIF = 0x100031;
+    //todo:未知（分享的链接，比如youtube的链接
+    //估计是无法预览的分享，仍然显示的是文字
+    protected static final int TYPE_16777265 = 0x01000031;
+    //公众号推送（图片配文字）
+    protected static final int TYPE_PUSH = 0x11000031;
+    //小程序支付相关通知
+    protected static final int TYPE_WCX_PAY = 0x13000031;
+    //转账
+    protected static final int TYPE_TRANSFER = 0x19000031;
+    //红包
+    protected static final int TYPE_HB = 0x1a000031;
+    //加群的系统通知
+    protected static final int TYPE_SYSTEM_JOIN_GROUP = 0x22000031;
+    //todo:未知（图片
+    protected static final int TYPE_587202609 = 0x23000031;
+    //todo:未知（图片
+    protected static final int TYPE_687865905 = 0x29000031;
+    //回复
+    protected static final int TYPE_REPLY = 0x31000031;
+    //拍一拍消息
+    protected static final int TYPE_SYSTEM_PAT = 0x35000031;
+
+    //=====SUBTYPE是复杂类型消息的亚类=====
+    //todo:分享（未知类型）[待定]
+    protected static final int SUBTYPE_1 = 1;
+    //todo:图片（来自小程序）[待定]
+    protected static final int SUBTYPE_IMAGE = 2;
+    //音乐
+    protected static final int SUBTYPE_MUSIC = 3;
+    //视频
+    protected static final int SUBTYPE_VIDEO = 4;
+    //公众号的通知
+    protected static final int SUBTYPE_URL = 5;
+    //文件
+    protected static final int SUBTYPE_FILE = 6;
+    //游戏（暂定）
+    protected static final int SUBTYPE_GAME = 7;
+    //GIF图片
+    protected static final int SUBTYPE_GIF = 8;
+    //位置共享
+    protected static final int SUBTYPE_POSITION_SHARE = 17;
+    //消息转发
+    protected static final int SUBTYPE_REPOST = 19;
+    //链接（分享自小程序）
+    protected static final int SUBTYPE_WCX = 33;
+    //分享（来自其他程序的分享）
+    protected static final int SUBTYPE_SHARE = 36;
+    //todo:红包（来自小程序）[待定]
+    protected static final int SUBTYPE_46 = 46;
+    //回复消息
+    protected static final int SUBTYPE_REPLY = 57;
+    //转账消息
+    protected static final int SUBTYPE_TRANSFER = 2000;
+    //红包消息
+    protected static final int SUBTYPE_HB = 2001;
+
+    public enum Type {
+        CALL(R.string.call),
+        EMOJI(R.string.emoji),
+        RECOMMEND(R.string.recommend_friend),
+        PLAIN(R.string.plain_text),
+        IMAGE(R.string.picture),
+        GIF(R.string.gif),
+        PUSH(R.string.push),
+        VIDEO(R.string.video),
+        VOICE(R.string.voice),
+
+        SYSTEM(R.string.system_msg),
+
+        LOCATION(R.string.location, true),
+
+        WCX_SHARED(R.string.wcx, true),
+        SHARED_URL(R.string.shared_url, true),
+        SHARE(R.string.share, true),
+        REPOST(R.string.repost, true),
+        FILE(R.string.file, true),
+        TRANSFER(R.string.transfer, true),
+        HB(R.string.hongbao, true),
+        NOTIFICATION(R.string.notification, true),
+        REPLY(R.string.reply, true),
+        MUSIC(R.string.music, true),
+        POSITION_SHARE(R.string.position_share, true),
+        OTHERS(R.string.others, true);
+        String caption;
+        private final boolean isComplex;
+
+        Type(@StringRes int captionRes, boolean isComplex) {
+            this.caption = App.getStringOf(captionRes);
+            this.isComplex = isComplex;
+        }
+
+        Type(@StringRes int captionRes) {
+            this.caption = App.getStringOf(captionRes);
+            this.isComplex = false;
+        }
+
+        public boolean isComplex() {
+            return isComplex;
+        }
+
+        public String getCaption() {
+            return caption;
+        }
+
+        public boolean isSystem() {
+            return this == SYSTEM;
+        }
+
+        public boolean isPlain() {
+            return this == PLAIN;
+        }
+
+    }
+
+    @NotNull
+    public static Message createMessage(@NonNull ContentValues values) {
+        Type type = judgeType(values.getAsInteger(Message.KEY_TYPE));
+        Message msg;
+        if (type.isComplex()) {
+            msg = new ComplexMessage(values);
+        } else if (type.isSystem()) {
+            msg = new SystemMessage(values);
+        } else if (type.isPlain()) {
+            msg = new PlainMessage(values);
+        } else {
+            msg = new UnsupportedMessage(values);
+        }
+        msg.setType(type);
+        return msg;
+    }
+
+    @NonNull
+    static Type judgeType(int rawType) {
+        switch (rawType) {
+            case TYPE_PLAIN_MSG:
+                return Type.PLAIN;
+            case TYPE_IMAGE:
+                return Type.IMAGE;
+            case TYPE_EMOJI:
+                return Type.EMOJI;
+            case TYPE_TRANSFER:
+                return Type.TRANSFER;
+            case TYPE_HB:
+                return Type.HB;
+            case TYPE_GIF:
+                return Type.GIF;
+            case TYPE_VOICE:
+                return Type.VOICE;
+            case TYPE_CALL:
+                return Type.CALL;
+            case TYPE_VIDEO:
+                return Type.VIDEO;
+            case TYPE_RECOMMEND:
+                return Type.RECOMMEND;
+            case TYPE_LOCATION:
+                return Type.LOCATION;
+            case TYPE_PUSH:
+                return Type.PUSH;
+            case TYPE_16777265:
+            case TYPE_SHARE:
+                return Type.SHARE;
+            case TYPE_REPLY:
+                return Type.REPLY;
+            case TYPE_WCX_PAY:
+                return Type.NOTIFICATION;
+            case TYPE_SYSTEM_POSITION_REQUEST:
+            case TYPE_SYSTEM_CALL:
+            case TYPE_SYSTEM_PAT:
+            case TYPE_SYSTEM_JOIN_GROUP:
+            case TYPE_SYSTEM:
+                return Type.SYSTEM;
+        }
+        return Type.OTHERS;
+    }
+
+    /**
+     * todo
+     * 为未识别的消息类型寻找可能的类型
+     *
+     * @return 可能的消息类型
+     */
+    private Type fallback() {
+        return null;
+    }
+}
Index: app/src/main/res/transition/message_enter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/transition/message_enter.xml	(date 1596285905746)
+++ app/src/main/res/transition/message_enter.xml	(date 1596285905746)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<transitionSet xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@integer/animDurationNormal"
+    android:interpolator="@android:interpolator/linear_out_slow_in">
+    <slide android:slideEdge="top">
+        <targets>
+            <target android:targetId="@+id/top_bar" />
+        </targets>
+    </slide>
+    <slide android:slideEdge="bottom">
+        <targets>
+            <target android:targetId="@+id/ll_curtain" />
+        </targets>
+    </slide>
+    <fade>
+        <targets>
+            <target android:targetId="@android:id/statusBarBackground" />
+            <target android:targetId="@android:id/navigationBarBackground" />
+            <target android:targetId="@id/background" />
+        </targets>
+    </fade>
+</transitionSet>
\ No newline at end of file
Index: app/src/main/res/transition/image_viewer_shared_return.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/transition/image_viewer_shared_return.xml	(date 1594831352357)
+++ app/src/main/res/transition/image_viewer_shared_return.xml	(date 1594831352357)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<transitionSet xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:interpolator="@android:interpolator/fast_out_slow_in">
+    <changeBounds />
+    <changeImageTransform />
+    <changeClipBounds />
+    <transition xmlns:app="http://schemas.android.com/apk/res-auto"
+        class="xjunz.tool.wechat.ui.transition.ChangeCorners"
+        app:endCornerRadius="@dimen/r_fab_normal"
+        app:startCornerRadius="0dp" />
+    <targets>
+        <target android:targetId="@+id/iv_avatar" />
+    </targets>
+
+</transitionSet>
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/impl/model/message/PlainMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/impl/model/message/PlainMessage.java	(date 1596110828555)
+++ app/src/main/java/xjunz/tool/wechat/impl/model/message/PlainMessage.java	(date 1596110828555)
@@ -0,0 +1,56 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.impl.model.message;
+
+import android.content.ContentValues;
+import android.text.Html;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+
+import java.util.Objects;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * 普通文本消息类型
+ * <p>
+ * 微信会解析{@code &lt;a/&gt;}标签，因此我们需要判断文本内容里是否有该标签
+ * </p>
+ */
+public class PlainMessage extends Message {
+    private boolean isSpanned;
+    private String parsedContent;
+    private CharSequence spannedContent;
+
+
+    public PlainMessage(ContentValues values) {
+        super(values);
+    }
+
+    @NonNull
+    @Override
+    public String getParsedContent() {
+        if (parsedContent == null) {
+            Pattern pattern = Pattern.compile("<a .+?=\".+?\">(.+?)</a>");
+            Matcher matcher = pattern.matcher(content);
+            this.parsedContent = content;
+            while (matcher.find()) {
+                isSpanned = true;
+                parsedContent = parsedContent.replace(matcher.group(), Objects.requireNonNull(matcher.group(1)));
+            }
+        }
+        return parsedContent;
+    }
+
+    @NonNull
+    @Override
+    public CharSequence getSpannedContent() {
+        if (spannedContent == null) {
+            getParsedContent();
+            spannedContent = isSpanned ? Html.fromHtml(content.replaceAll("\n", "<br>")) : content;
+        }
+        return spannedContent;
+    }
+}
Index: app/src/main/java/xjunz/tool/wechat/util/ColorUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/util/ColorUtils.java	(date 1595075803933)
+++ app/src/main/java/xjunz/tool/wechat/util/ColorUtils.java	(date 1595075803933)
@@ -0,0 +1,131 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+
+package xjunz.tool.wechat.util;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.util.TypedValue;
+
+import androidx.annotation.AttrRes;
+import androidx.annotation.CheckResult;
+import androidx.annotation.ColorInt;
+import androidx.annotation.ColorRes;
+import androidx.annotation.FloatRange;
+import androidx.annotation.IntDef;
+import androidx.annotation.IntRange;
+import androidx.annotation.NonNull;
+import androidx.core.content.ContextCompat;
+import androidx.core.math.MathUtils;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+/**
+ * Utility methods for working with colors.
+ * Borrowed  from <a href=https://github.com/nickbutcher/plaid />
+ */
+
+public class ColorUtils {
+
+    private ColorUtils() {
+    }
+
+    public static final int IS_LIGHT = 0;
+    public static final int IS_DARK = 1;
+    public static final int LIGHTNESS_UNKNOWN = 2;
+
+    /**
+     * Set the alpha component of {@code color} to be {@code alpha}.
+     */
+    public static @CheckResult
+    @ColorInt
+    int modifyAlpha(@ColorInt int color,
+                    @IntRange(from = 0, to = 255) int alpha) {
+        return (color & 0x00ffffff) | (alpha << 24);
+    }
+
+    /**
+     * Set the alpha component of {@code color} to be {@code alpha}.
+     */
+    public static @CheckResult
+    @ColorInt
+    int modifyAlpha(@ColorInt int color,
+                    @FloatRange(from = 0f, to = 1f) float alpha) {
+        return modifyAlpha(color, (int) (255f * alpha));
+    }
+
+
+    /**
+     * Check if a color is dark (convert to XYZ & check Y component)
+     */
+    public static boolean isDark(@ColorInt int color) {
+        return androidx.core.graphics.ColorUtils.calculateLuminance(color) < 0.5;
+    }
+
+    /**
+     * Calculate a variant of the color to make it more suitable for overlaying information. Light
+     * colors will be lightened and dark colors will be darkened
+     *
+     * @param color               the color to adjust
+     * @param isDark              whether {@code color} is light or dark
+     * @param lightnessMultiplier the amount to modify the color e.g. 0.1f will alter it by 10%
+     * @return the adjusted color
+     */
+    public static @ColorInt
+    int scrimify(@ColorInt int color,
+                 boolean isDark,
+                 @FloatRange(from = 0f, to = 1f) float lightnessMultiplier) {
+        float[] hsl = new float[3];
+        androidx.core.graphics.ColorUtils.colorToHSL(color, hsl);
+
+        if (!isDark) {
+            lightnessMultiplier += 1f;
+        } else {
+            lightnessMultiplier = 1f - lightnessMultiplier;
+        }
+
+        hsl[2] = MathUtils.clamp(hsl[2] * lightnessMultiplier, 0f, 1f);
+        return androidx.core.graphics.ColorUtils.HSLToColor(hsl);
+    }
+
+    public static @ColorInt
+    int scrimify(@ColorInt int color,
+                 @FloatRange(from = 0f, to = 1f) float lightnessMultiplier) {
+        return scrimify(color, isDark(color), lightnessMultiplier);
+    }
+
+    /**
+     * Queries the theme of the given {@code context} for a theme color.
+     *
+     * @param context            the context holding the current theme.
+     * @param attrResId          the theme color attribute to resolve.
+     * @param fallbackColorResId a color resource id tto fallback to if the theme color cannot be
+     *                           resolved.
+     * @return the theme color or the fallback color.
+     */
+    @ColorInt
+    public static int getThemeColor(@NonNull Context context, @AttrRes int attrResId,
+                                    @ColorRes int fallbackColorResId) {
+        final TypedValue tv = new TypedValue();
+        if (context.getTheme().resolveAttribute(attrResId, tv, true)) {
+            return tv.data;
+        }
+        return ContextCompat.getColor(context, fallbackColorResId);
+    }
+
+    @ColorInt
+    public static int getAttrColor(@NonNull Context context, @AttrRes int attrResId) {
+        int[] attrs = new int[]{attrResId};
+        TypedArray ta = context.obtainStyledAttributes(attrs);
+        int color = ta.getColor(0, 0);
+        ta.recycle();
+        return color;
+    }
+
+    @Retention(RetentionPolicy.SOURCE)
+    @IntDef({IS_LIGHT, IS_DARK, LIGHTNESS_UNKNOWN})
+    public @interface Lightness {
+    }
+}
Index: .idea/dictionaries/zxj.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectDictionaryState\">\r\n  <dictionary name=\"zxj\">\r\n    <words>\r\n      <w>chatroom</w>\r\n      <w>flowable</w>\r\n      <w>imei</w>\r\n      <w>unfollowed</w>\r\n      <w>wechat</w>\r\n      <w>xjunz</w>\r\n    </words>\r\n  </dictionary>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/zxj.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ .idea/dictionaries/zxj.xml	(date 1604397794704)
@@ -1,10 +1,16 @@
 <component name="ProjectDictionaryState">
   <dictionary name="zxj">
     <words>
+      <w>abcdef</w>
       <w>chatroom</w>
+      <w>emoji</w>
       <w>flowable</w>
       <w>imei</w>
+      <w>repost</w>
+      <w>tencent</w>
+      <w>uins</w>
       <w>unfollowed</w>
+      <w>viewmodel</w>
       <w>wechat</w>
       <w>xjunz</w>
     </words>
Index: app/src/main/java/xjunz/tool/wechat/ui/customview/ElasticDragDismissFrameLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/customview/ElasticDragDismissFrameLayout.java	(date 1595075803942)
+++ app/src/main/java/xjunz/tool/wechat/ui/customview/ElasticDragDismissFrameLayout.java	(date 1595075803942)
@@ -0,0 +1,307 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+
+package xjunz.tool.wechat.ui.customview;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Color;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.FrameLayout;
+
+import androidx.annotation.IdRes;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.util.AnimUtils;
+import xjunz.tool.wechat.util.ColorUtils;
+import xjunz.tool.wechat.util.UiUtils;
+
+
+/**
+ * A {@link FrameLayout} which responds to nested scrolls to create drag-dismissable layouts.
+ * Applies an elasticity factor to reduce movement as you approach the given dismiss distance.
+ * Optionally also scales down content during drag.
+ * <p>
+ * Borrowed from <a href=https://github.com/nickbutcher/plaid />
+ */
+
+public class ElasticDragDismissFrameLayout extends FrameLayout {
+
+    // configurable attributes
+    private float dragDismissDistance = Float.MAX_VALUE;
+    private float dragDismissFraction = -1f;
+    private float dragDismissScale = 1f;
+    private boolean shouldScale = false;
+    private float dragElasticity = 0.8f;
+    @IdRes
+    private int dragDismissTargetId = View.NO_ID;
+
+    // state
+    private float totalDrag;
+    private boolean draggingDown = false;
+    private boolean draggingUp = false;
+    private int mLastActionEvent;
+
+    private List<ElasticDragDismissCallback> callbacks;
+
+    public ElasticDragDismissFrameLayout(Context context) {
+        this(context, null, 0, 0);
+    }
+
+    public ElasticDragDismissFrameLayout(Context context, AttributeSet attrs) {
+        this(context, attrs, 0, 0);
+    }
+
+    public ElasticDragDismissFrameLayout(Context context, AttributeSet attrs,
+                                         int defStyleAttr) {
+        this(context, attrs, defStyleAttr, 0);
+    }
+
+    public ElasticDragDismissFrameLayout(Context context, AttributeSet attrs,
+                                         int defStyleAttr, int defStyleRes) {
+        super(context, attrs, defStyleAttr, defStyleRes);
+
+        final TypedArray a = getContext().obtainStyledAttributes(
+                attrs, R.styleable.ElasticDragDismissFrameLayout, 0, 0);
+
+        if (a.hasValue(R.styleable.ElasticDragDismissFrameLayout_dragDismissDistance)) {
+            dragDismissDistance = a.getDimensionPixelSize(R.styleable
+                    .ElasticDragDismissFrameLayout_dragDismissDistance, 0);
+        } else if (a.hasValue(R.styleable.ElasticDragDismissFrameLayout_dragDismissFraction)) {
+            dragDismissFraction = a.getFloat(R.styleable
+                    .ElasticDragDismissFrameLayout_dragDismissFraction, dragDismissFraction);
+        }
+        if (a.hasValue(R.styleable.ElasticDragDismissFrameLayout_dragDismissScale)) {
+            dragDismissScale = a.getFloat(R.styleable
+                    .ElasticDragDismissFrameLayout_dragDismissScale, dragDismissScale);
+            shouldScale = dragDismissScale != 1f;
+        }
+        if (a.hasValue(R.styleable.ElasticDragDismissFrameLayout_dragElasticity)) {
+            dragElasticity = a.getFloat(R.styleable.ElasticDragDismissFrameLayout_dragElasticity,
+                    dragElasticity);
+        }
+        if (a.hasValue(R.styleable.ElasticDragDismissFrameLayout_dragDismissTarget)) {
+            dragDismissTargetId = a.getResourceId(R.styleable.ElasticDragDismissFrameLayout_dragDismissTarget, dragDismissTargetId);
+        }
+        a.recycle();
+    }
+
+    public static abstract class ElasticDragDismissCallback {
+
+        /**
+         * Called for each drag event.
+         *
+         * @param elasticOffset       Indicating the drag offset with elasticity applied i.e. may
+         *                            exceed 1.
+         * @param elasticOffsetPixels The elastically scaled drag distance in pixels.
+         * @param rawOffset           Value from [0, 1] indicating the raw drag offset i.e.
+         *                            without elasticity applied. A value of 1 indicates that the
+         *                            dismiss distance has been reached.
+         * @param rawOffsetPixels     The raw distance the user has dragged
+         */
+        public void onDrag(float elasticOffset, float elasticOffsetPixels,
+                           float rawOffset, float rawOffsetPixels) {
+        }
+
+        /**
+         * Called when dragging is released and has exceeded the threshold dismiss distance.
+         */
+        public void onDragDismissed() {
+        }
+
+    }
+
+    @Override
+    public boolean onStartNestedScroll(View child, View target, int nestedScrollAxes) {
+        return (dragDismissTargetId != View.NO_ID && dragDismissTargetId == target.getId()) && (nestedScrollAxes & View.SCROLL_AXIS_VERTICAL) != 0;
+    }
+
+    @Override
+    public void onNestedPreScroll(View target, int dx, int dy, int[] consumed) {
+        // if we're in a drag gesture and the user reverses up the we should take those events
+        if (draggingDown && dy > 0 || draggingUp && dy < 0) {
+            dragScale(dy);
+            consumed[1] = dy;
+        }
+    }
+
+    @Override
+    public void onNestedScroll(View target, int dxConsumed, int dyConsumed,
+                               int dxUnconsumed, int dyUnconsumed) {
+        dragScale(dyUnconsumed);
+    }
+
+    @Override
+    public boolean onInterceptTouchEvent(MotionEvent ev) {
+        mLastActionEvent = ev.getAction();
+        return super.onInterceptTouchEvent(ev);
+    }
+
+    @Override
+    public void onStopNestedScroll(View child) {
+        if (Math.abs(totalDrag) >= dragDismissDistance) {
+            dispatchDismissCallback();
+        } else { // settle back to natural position
+            if (mLastActionEvent == MotionEvent.ACTION_DOWN) {
+                // this is a 'defensive cleanup for new gestures',
+                // don't animate here
+                // see also https://github.com/nickbutcher/plaid/issues/185
+                setTranslationY(0f);
+                setScaleX(1f);
+                setScaleY(1f);
+            } else {
+                animate()
+                        .translationY(0f)
+                        .scaleX(1f)
+                        .scaleY(1f)
+                        .setDuration(200L)
+                        .setInterpolator(AnimUtils.getFastOutSlowInInterpolator())
+                        .setListener(null)
+                        .start();
+            }
+            totalDrag = 0;
+            draggingDown = draggingUp = false;
+            dispatchDragCallback(0f, 0f, 0f, 0f);
+        }
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        super.onSizeChanged(w, h, oldw, oldh);
+        if (dragDismissFraction > 0f) {
+            dragDismissDistance = h * dragDismissFraction;
+        }
+    }
+
+    public void addListener(ElasticDragDismissCallback listener) {
+        if (callbacks == null) {
+            callbacks = new ArrayList<>();
+        }
+        callbacks.add(listener);
+    }
+
+    public void removeListener(ElasticDragDismissCallback listener) {
+        if (callbacks != null && callbacks.size() > 0) {
+            callbacks.remove(listener);
+        }
+    }
+
+    private void dragScale(int scroll) {
+        if (scroll == 0) return;
+
+        totalDrag += scroll;
+
+        // track the direction & set the pivot point for scaling
+        // don't double track i.e. if start dragging down and then reverse, keep tracking as
+        // dragging down until they reach the 'natural' position
+        if (scroll < 0 && !draggingUp && !draggingDown) {
+            draggingDown = true;
+            if (shouldScale) setPivotY(getHeight());
+        } else if (scroll > 0 && !draggingDown && !draggingUp) {
+            draggingUp = true;
+            if (shouldScale) setPivotY(0f);
+        }
+        // how far have we dragged relative to the distance to perform a dismiss
+        // (0–1 where 1 = dismiss distance). Decreasing logarithmically as we approach the limit
+        float dragFraction = (float) Math.log10(1 + (Math.abs(totalDrag) / dragDismissDistance));
+
+        // calculate the desired translation given the drag fraction
+        float dragTo = dragFraction * dragDismissDistance * dragElasticity;
+
+        if (draggingUp) {
+            // as we use the absolute magnitude when calculating the drag fraction, need to
+            // re-apply the drag direction
+            dragTo *= -1;
+        }
+        setTranslationY(dragTo);
+
+        if (shouldScale) {
+            final float scale = 1 - ((1 - dragDismissScale) * dragFraction);
+            setScaleX(scale);
+            setScaleY(scale);
+        }
+
+        // if we've reversed direction and gone past the settle point then clear the flags to
+        // allow the list to get the scroll events & reset any transforms
+        if ((draggingDown && totalDrag >= 0)
+                || (draggingUp && totalDrag <= 0)) {
+            totalDrag = dragTo = dragFraction = 0;
+            draggingDown = draggingUp = false;
+            setTranslationY(0f);
+            setScaleX(1f);
+            setScaleY(1f);
+        }
+        dispatchDragCallback(dragFraction, dragTo,
+                Math.min(1f, Math.abs(totalDrag) / dragDismissDistance), totalDrag);
+    }
+
+    private void dispatchDragCallback(float elasticOffset, float elasticOffsetPixels,
+                                      float rawOffset, float rawOffsetPixels) {
+        if (callbacks != null && !callbacks.isEmpty()) {
+            for (ElasticDragDismissCallback callback : callbacks) {
+                callback.onDrag(elasticOffset, elasticOffsetPixels,
+                        rawOffset, rawOffsetPixels);
+            }
+        }
+    }
+
+    private void dispatchDismissCallback() {
+        if (callbacks != null && !callbacks.isEmpty()) {
+            for (ElasticDragDismissCallback callback : callbacks) {
+                callback.onDragDismissed();
+            }
+        }
+    }
+
+    /**
+     * An {@link ElasticDragDismissCallback} which fades system chrome (i.e. status bar and
+     * navigation bar) whilst elastic drags are performed and
+     * {@link Activity#finishAfterTransition() finishes} the activity when drag dismissed.
+     */
+    public static class SystemChromeFader extends ElasticDragDismissCallback {
+
+        private final Activity activity;
+        private final int statusBarAlpha;
+        private final int navBarAlpha;
+        private final boolean fadeNavBar;
+
+        public SystemChromeFader(Activity activity) {
+            this.activity = activity;
+            statusBarAlpha = Color.alpha(activity.getWindow().getStatusBarColor());
+            navBarAlpha = Color.alpha(activity.getWindow().getNavigationBarColor());
+            fadeNavBar = UiUtils.isNavBarOnBottom(activity);
+        }
+
+
+        @Override
+        public void onDrag(float elasticOffset, float elasticOffsetPixels,
+                           float rawOffset, float rawOffsetPixels) {
+            if (elasticOffsetPixels > 0) {
+                // dragging downward, fade the status bar in proportion
+                activity.getWindow().setStatusBarColor(ColorUtils.modifyAlpha(activity.getWindow().getStatusBarColor(),
+                        (int) ((1f - rawOffset) * statusBarAlpha)));
+            } else if (elasticOffsetPixels == 0) {
+                // reset
+                activity.getWindow().setStatusBarColor(ColorUtils.modifyAlpha(activity.getWindow().getStatusBarColor(), statusBarAlpha));
+                activity.getWindow().setNavigationBarColor(ColorUtils.modifyAlpha(activity.getWindow().getNavigationBarColor(), navBarAlpha));
+            } else if (fadeNavBar) {
+                // dragging upward, fade the navigation bar in proportion
+                activity.getWindow().setNavigationBarColor(
+                        ColorUtils.modifyAlpha(activity.getWindow().getNavigationBarColor(),
+                                (int) ((1f - rawOffset) * navBarAlpha)));
+            }
+        }
+
+        public void onDragDismissed() {
+            activity.finishAfterTransition();
+        }
+    }
+
+}
Index: app/src/main/assets/README.TXT
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/README.TXT	(date 1594961821729)
+++ app/src/main/assets/README.TXT	(date 1594961821729)
@@ -0,0 +1,2 @@
+开发不易，维护亦难，希望您能尊重我的劳动成果，谢谢!
+安卓开发交流QQ群：479340880
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/ui/transition/ChangeCorners.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/transition/ChangeCorners.java	(date 1604070611242)
+++ app/src/main/java/xjunz/tool/wechat/ui/transition/ChangeCorners.java	(date 1604070611242)
@@ -0,0 +1,87 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.ui.transition;
+
+import android.animation.Animator;
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Outline;
+import android.transition.Transition;
+import android.transition.TransitionValues;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewOutlineProvider;
+
+import androidx.annotation.Dimension;
+
+import org.jetbrains.annotations.NotNull;
+
+import xjunz.tool.wechat.R;
+import xjunz.tool.wechat.util.AnimUtils;
+
+/**
+ * 一个改变{@link View}的圆角半径的{@code Shared Element} {@link Transition}
+ * <p>
+ * 实现方式为改变{@link View}的{@link Outline}的圆角半径，根据{@link ChangeCorners#mStartCorner}
+ * 和{@link ChangeCorners#mEndCorner}构造{@link ValueAnimator}
+ *
+ * @author xjunz 2020/7/16 00:56
+ * @see View#setOutlineProvider(ViewOutlineProvider)
+ * @see ChangeCorners#createAnimator(ViewGroup, TransitionValues, TransitionValues)
+ * @see R.styleable#Transform_startCornerRadius
+ * @see R.styleable#Transform_endCornerRadius
+ * </p>
+ */
+public class ChangeCorners extends Transition {
+
+    /**
+     * 起始{@link android.transition.Scene}的{@code Shared Element}的圆角半径
+     */
+    @Dimension
+    private final int mStartCorner;
+    /**
+     * 结束{@link android.transition.Scene}的{@code Shared Element}的圆角半径
+     */
+    @Dimension
+    private final int mEndCorner;
+
+    public ChangeCorners(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.Transform);
+        mStartCorner = ta.getDimensionPixelSize(R.styleable.Transform_startCornerRadius, 0);
+        mEndCorner = ta.getDimensionPixelSize(R.styleable.Transform_endCornerRadius, 0);
+        ta.recycle();
+    }
+
+
+    @Override
+    public void captureStartValues(TransitionValues transitionValues) {
+        //no-op
+    }
+
+    @Override
+    public void captureEndValues(TransitionValues transitionValues) {
+        //no-op
+    }
+
+
+    @Override
+    public Animator createAnimator(ViewGroup sceneRoot, TransitionValues startValues, @NotNull TransitionValues endValues) {
+        View target = endValues.view;
+        target.setClipToOutline(true);
+        ValueAnimator changeOutline = ValueAnimator.ofFloat(mStartCorner, mEndCorner);
+        changeOutline.addUpdateListener(animation -> target.setOutlineProvider(new ViewOutlineProvider() {
+            @Override
+            public void getOutline(View view, Outline outline) {
+                float corner = (float) animation.getAnimatedValue();
+                outline.setRoundRect(view.getPaddingLeft(), view.getPaddingTop(), view.getWidth() - view.getPaddingLeft(),
+                        view.getHeight() - view.getPaddingTop(), corner);
+            }
+        }));
+        changeOutline.setInterpolator(AnimUtils.getFastOutSlowInInterpolator());
+        return changeOutline;
+    }
+}
Index: app/src/main/res/layout/item_top_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_top_header.xml	(date 1594826647402)
+++ app/src/main/res/layout/item_top_header.xml	(date 1594826647402)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/textView6"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/colorAccentBlind"
+        android:paddingStart="@dimen/spacing_unit"
+        android:paddingTop="@dimen/dp_12"
+        android:paddingEnd="@dimen/spacing_unit"
+        android:paddingBottom="@dimen/dp_12"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_btn_small.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:inset=\"@dimen/spacing_unit\">\r\n    <ripple android:color=\"@color/colorMask\">\r\n        <item>\r\n            <shape android:shape=\"rectangle\">\r\n                <corners android:radius=\"@dimen/corner_button\" />\r\n                <solid android:color=\"?colorButtonNormal\" />\r\n            </shape>\r\n        </item>\r\n    </ripple>\r\n</inset>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_btn_small.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/drawable/bg_btn_small.xml	(date 1594805473605)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (c) 2020 xjunz. 保留所有权利
   -->
-
 <inset xmlns:android="http://schemas.android.com/apk/res/android"
     android:inset="@dimen/spacing_unit">
     <ripple android:color="@color/colorMask">
@@ -9,6 +8,9 @@
             <shape android:shape="rectangle">
                 <corners android:radius="@dimen/corner_button" />
                 <solid android:color="?colorButtonNormal" />
+                <padding
+                    android:left="@dimen/spacing_unit"
+                    android:right="@dimen/spacing_unit" />
             </shape>
         </item>
     </ripple>
Index: app/src/main/res/layout/fragment_search.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_search.xml	(date 1595091235094)
+++ app/src/main/res/layout/fragment_search.xml	(date 1595091235094)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+
+        <ImageView
+            android:id="@+id/iv_no_result"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:contentDescription="@string/cd_no_result"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:srcCompat="@mipmap/art_no_result" />
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rv_result"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:scrollbars="vertical"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            tools:listitem="@layout/item_message_search_result">
+        </androidx.recyclerview.widget.RecyclerView>
+
+        <ProgressBar
+            android:id="@+id/pb_load"
+            style="?android:attr/progressBarStyleSmall"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/spacing_normal"
+            android:background="@drawable/bg_fab"
+            android:backgroundTint="?colorPrimary"
+            android:elevation="@dimen/z_popup"
+            android:indeterminate="true"
+            android:padding="@dimen/dp_12"
+            android:visibility="gone"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+
+        <ImageButton
+            android:id="@+id/ib_filter"
+            android:layout_width="@dimen/fab_normal"
+            android:layout_height="@dimen/fab_normal"
+            android:background="@drawable/bg_fab"
+            android:elevation="@dimen/z_fab"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.9"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.92"
+            app:srcCompat="@drawable/ic_filter_24dp" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/test/java/xjunz/tool/wechat/MessageParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/xjunz/tool/wechat/MessageParser.java	(date 1595753094425)
+++ app/src/test/java/xjunz/tool/wechat/MessageParser.java	(date 1595753094425)
@@ -0,0 +1,138 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat;
+
+import org.xml.sax.Attributes;
+import org.xml.sax.SAXException;
+import org.xml.sax.helpers.DefaultHandler;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Objects;
+
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.parsers.SAXParser;
+import javax.xml.parsers.SAXParserFactory;
+
+import xjunz.tool.wechat.util.UniUtils;
+
+
+public class MessageParser {
+   // private static final String TAG = xjunz.tool.wechat.impl.model.message.MessageParser.class.getName();
+
+    private static final String TEST_XML =
+            "<sysmsg type=\"sysmsgtemplate\">\n" +
+                    "\t<sysmsgtemplate>\n" +
+                    "\t\t<content_template type=\"tmpl_type_profile\">\n" +
+                    "\t\t\t<plain><![CDATA[]]></plain>\n" +
+                    "\t\t\t<template><![CDATA[\"$username$\"邀请\"$names$\"加入了群聊]]></template>\n" +
+                    "\t\t\t<link_list>\n" +
+                    "\t\t\t\t<link name=\"username\" type=\"link_profile\">\n" +
+                    "\t\t\t\t\t<memberlist>\n" +
+                    "\t\t\t\t\t\t<member>\n" +
+                    "\t\t\t\t\t\t\t<username><![CDATA[wxid_wgabh1cqlq9u22]]></username>\n" +
+                    "\t\t\t\t\t\t\t<nickname><![CDATA[张羽]]></nickname>\n" +
+                    "\t\t\t\t\t\t</member>\n" +
+                    "\t\t\t\t\t</memberlist>\n" +
+                    "\t\t\t\t</link>\n" +
+                    "\t\t\t\t<link name=\"names\" type=\"link_profile\">\n" +
+                    "\t\t\t\t\t<memberlist>\n" +
+                    "\t\t\t\t\t\t<member>\n" +
+                    "\t\t\t\t\t\t\t<username><![CDATA[wxid_0zzj702m3xzc21]]></username>\n" +
+                    "\t\t\t\t\t\t\t<nickname><![CDATA[\uD83C\uDF4F]]></nickname>\n" +
+                    "\t\t\t\t\t\t</member>\n" +
+                    "\t\t\t\t\t</memberlist>\n" +
+                    "\t\t\t\t\t<separator><![CDATA[、]]></separator>\n" +
+                    "\t\t\t\t</link>\n" +
+                    "\t\t\t</link_list>\n" +
+                    "\t\t</content_template>\n" +
+                    "\t</sysmsgtemplate>\n" +
+                    "</sysmsg>\n" +
+                    "\n";
+
+    public static void parseJoinGroupMessage(String raw) {
+        SAXParserFactory factory = SAXParserFactory.newInstance();
+        long start = System.currentTimeMillis();
+        try {
+            SAXParser saxParser = factory.newSAXParser();
+            JoinGroupMessageHandler handler = new JoinGroupMessageHandler();
+            saxParser.parse(new ByteArrayInputStream(TEST_XML.getBytes()), handler);
+        } catch (ParserConfigurationException | SAXException | IOException e) {
+            e.printStackTrace();
+        }
+        System.out.println("耗时：" + (System.currentTimeMillis() - start));
+    }
+
+    private static class JoinGroupMessageHandler extends DefaultHandler {
+        private boolean inTemplate;
+        private boolean inNickname;
+        private String template;
+        private String currentPattern;
+        private List<String> patterns = new ArrayList<>();
+        private HashMap<String, String> matchedMap;
+
+
+        @Override
+        public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
+            super.startElement(uri, localName, qName, attributes);
+            switch (qName) {
+                case "template":
+                    inTemplate = true;
+                    break;
+                case "link":
+                    currentPattern = attributes.getValue("name");
+                    break;
+                case "nickname":
+                    inNickname = true;
+                default:
+                    break;
+            }
+        }
+
+        @Override
+        public void endElement(String uri, String localName, String qName) throws SAXException {
+            super.endElement(uri, localName, qName);
+            switch (qName) {
+                case "template":
+                    inTemplate = false;
+                    break;
+                case "nickname":
+                    inNickname = false;
+                default:
+                    break;
+            }
+        }
+
+        @Override
+        public void endDocument() throws SAXException {
+            super.endDocument();
+            for (String pattern : patterns) {
+                template = template.replace("$" + pattern + "$", Objects.requireNonNull(matchedMap.get(pattern)));
+            }
+            System.out.println(template);
+        }
+
+        @Override
+        public void characters(char[] ch, int start, int length) throws SAXException {
+            super.characters(ch, start, length);
+            String text = new String(ch, start, length).trim();
+            if (inTemplate) {
+                template = text;
+                patterns = UniUtils.extract(text, "\\$(.+k ?)\\$");
+                matchedMap = new HashMap<>();
+            } else if (inNickname) {
+                String matched = matchedMap.get(currentPattern);
+                if (matched == null) {
+                    matched = text;
+                } else {
+                    matched = matched + "、" + text;
+                }
+                matchedMap.put(currentPattern, matched);
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/ui/transition/MorphFabToDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright (c) 2020 xjunz. 保留所有权利\r\n */\r\n\r\npackage xjunz.tool.wechat.ui.transition;\r\n\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.annotation.TargetApi;\r\nimport android.content.Context;\r\nimport android.content.res.TypedArray;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.transition.ChangeBounds;\r\nimport android.transition.TransitionValues;\r\nimport android.util.AttributeSet;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.ColorInt;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\n\r\nimport xjunz.tool.wechat.R;\r\nimport xjunz.tool.wechat.util.AnimUtils;\r\n\r\n\r\n/**\r\n * A transition that morphs a circle into a rectangle, changing it's background color.\r\n * <p/>\r\n * Modified from Plaid\r\n */\r\n@TargetApi(Build.VERSION_CODES.LOLLIPOP)\r\npublic class MorphFabToDialog extends ChangeBounds {\r\n    private static final String PROPERTY_COLOR = \"plaid:circleMorph:color\";\r\n    private static final String PROPERTY_CORNER_RADIUS = \"plaid:circleMorph:cornerRadius\";\r\n    private static final String[] TRANSITION_PROPERTIES = {\r\n            PROPERTY_COLOR,\r\n            PROPERTY_CORNER_RADIUS\r\n    };\r\n    private\r\n    @ColorInt\r\n    int startColor = Color.TRANSPARENT;\r\n    private int endCornerRadius;\r\n    private int startCornerRadius;\r\n\r\n    public MorphFabToDialog(@ColorInt int startColor, int endCornerRadius) {\r\n        this(startColor, endCornerRadius, -1);\r\n    }\r\n\r\n    public MorphFabToDialog(@ColorInt int startColor, int endCornerRadius, int startCornerRadius) {\r\n        super();\r\n        setStartColor(startColor);\r\n        setEndCornerRadius(endCornerRadius);\r\n        setStartCornerRadius(startCornerRadius);\r\n    }\r\n\r\n    public MorphFabToDialog(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.FabTransform);\r\n        startColor = typedArray.getColor(R.styleable.FabTransform_startColor, startColor);\r\n        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_endCornerRadius, endCornerRadius);\r\n        startCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_startCornerRadius, startCornerRadius);\r\n        typedArray.recycle();\r\n    }\r\n\r\n    public void setStartColor(@ColorInt int startColor) {\r\n        this.startColor = startColor;\r\n    }\r\n\r\n    public void setEndCornerRadius(int endCornerRadius) {\r\n        this.endCornerRadius = endCornerRadius;\r\n    }\r\n\r\n    public void setStartCornerRadius(int startCornerRadius) {\r\n        this.startCornerRadius = startCornerRadius;\r\n    }\r\n\r\n    @Override\r\n    public String[] getTransitionProperties() {\r\n        ArrayList<String> boundsTransitionProps = new ArrayList<>(Arrays.asList(super.getTransitionProperties()));\r\n        Collections.addAll(boundsTransitionProps, TRANSITION_PROPERTIES);\r\n        return boundsTransitionProps.toArray(new String[0]);\r\n    }\r\n\r\n    @Override\r\n    public void captureStartValues(TransitionValues transitionValues) {\r\n        super.captureStartValues(transitionValues);\r\n        final View view = transitionValues.view;\r\n        transitionValues.values.put(PROPERTY_COLOR, startColor);\r\n        transitionValues.values.put(PROPERTY_CORNER_RADIUS,\r\n                startCornerRadius > 0 ? startCornerRadius : view.getHeight() / 2);\r\n    }\r\n\r\n    @Override\r\n    public void captureEndValues(TransitionValues transitionValues) {\r\n        super.captureEndValues(transitionValues);\r\n        transitionValues.values.put(PROPERTY_COLOR, Color.WHITE);\r\n        transitionValues.values.put(PROPERTY_CORNER_RADIUS, endCornerRadius);\r\n    }\r\n\r\n    @Override\r\n    public Animator createAnimator(final ViewGroup sceneRoot,\r\n                                   TransitionValues startValues,\r\n                                   final TransitionValues endValues) {\r\n        Animator changeBounds = super.createAnimator(sceneRoot, startValues, endValues);\r\n        if (startValues == null || endValues == null || changeBounds == null) {\r\n            return null;\r\n        }\r\n\r\n        Integer startColor = (Integer) startValues.values.get(PROPERTY_COLOR);\r\n        Integer startCornerRadius = (Integer) startValues.values.get(PROPERTY_CORNER_RADIUS);\r\n        Integer endColor = (Integer) endValues.values.get(PROPERTY_COLOR);\r\n        Integer endCornerRadius = (Integer) endValues.values.get(PROPERTY_CORNER_RADIUS);\r\n\r\n        if (startColor == null || startCornerRadius == null || endColor == null ||\r\n                endCornerRadius == null) {\r\n            return null;\r\n        }\r\n\r\n        MorphDrawable background = new MorphDrawable(startColor, startCornerRadius);\r\n        endValues.view.setBackground(background);\r\n        Animator color = ObjectAnimator.ofArgb(background, MorphDrawable.COLOR, endColor);\r\n        Animator corners = ObjectAnimator.ofFloat(background, MorphDrawable.CORNER_RADIUS,\r\n                endCornerRadius);\r\n        // ease in the dialog's child views (slide up & fade in)\r\n        if (endValues.view instanceof ViewGroup) {\r\n            ViewGroup vg = (ViewGroup) endValues.view;\r\n            float offset = vg.getHeight() / 4f;\r\n            for (int i = 0; i < vg.getChildCount(); i++) {\r\n                View v = vg.getChildAt(i);\r\n                //v.setTranslationY(offset);\r\n                v.setAlpha(0f);\r\n                v.animate()\r\n                        .alpha(1f)\r\n                        // .translationY(0f)\r\n                        .setDuration(150)\r\n                        .setStartDelay(180)\r\n                        .setInterpolator(AnimUtils.getFastOutSlowInInterpolator());\r\n                offset *= 1.5f;\r\n            }\r\n        }\r\n\r\n        AnimatorSet transition = new AnimatorSet();\r\n        transition.playTogether(changeBounds, corners, color);\r\n        /// transition.setInterpolator(AnimUtils.getFastOutSlowInInterpolator());\r\n        return transition;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/transition/MorphFabToDialog.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/ui/transition/MorphFabToDialog.java	(date 1594734873276)
@@ -60,10 +60,10 @@
 
     public MorphFabToDialog(Context context, AttributeSet attrs) {
         super(context, attrs);
-        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.FabTransform);
-        startColor = typedArray.getColor(R.styleable.FabTransform_startColor, startColor);
-        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_endCornerRadius, endCornerRadius);
-        startCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_startCornerRadius, startCornerRadius);
+        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.Transform);
+        startColor = typedArray.getColor(R.styleable.Transform_startColor, startColor);
+        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.Transform_endCornerRadius, endCornerRadius);
+        startCornerRadius = typedArray.getDimensionPixelSize(R.styleable.Transform_startCornerRadius, startCornerRadius);
         typedArray.recycle();
     }
 
Index: app/src/main/java/xjunz/tool/wechat/ui/transition/MorphDialogToFab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright (c) 2020 xjunz. 保留所有权利\r\n */\r\n\r\npackage xjunz.tool.wechat.ui.transition;\r\n\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.annotation.TargetApi;\r\nimport android.content.Context;\r\nimport android.content.res.TypedArray;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.transition.ChangeBounds;\r\nimport android.transition.TransitionValues;\r\nimport android.util.AttributeSet;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.ColorInt;\r\nimport androidx.annotation.Keep;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\n\r\nimport xjunz.tool.wechat.R;\r\nimport xjunz.tool.wechat.util.AnimUtils;\r\n\r\n\r\n/**\r\n * A transition that morphs a rectangle into a circle, changing it's background color.\r\n * <p/>\r\n * Modified from Plaid\r\n */\r\n@TargetApi(Build.VERSION_CODES.LOLLIPOP)\r\npublic class MorphDialogToFab extends ChangeBounds {\r\n\r\n    private static final String PROPERTY_COLOR = \"plaid:rectMorph:color\";\r\n    private static final String PROPERTY_CORNER_RADIUS = \"plaid:rectMorph:cornerRadius\";\r\n    private static final String[] TRANSITION_PROPERTIES = {\r\n            PROPERTY_COLOR,\r\n            PROPERTY_CORNER_RADIUS\r\n    };\r\n    private\r\n    @ColorInt\r\n    int endColor = Color.TRANSPARENT;\r\n    private int endCornerRadius = -1;\r\n\r\n    public MorphDialogToFab(@ColorInt int endColor) {\r\n        super();\r\n        setEndColor(endColor);\r\n    }\r\n\r\n    public MorphDialogToFab(@ColorInt int endColor, int endCornerRadius) {\r\n        super();\r\n        setEndColor(endColor);\r\n        setEndCornerRadius(endCornerRadius);\r\n    }\r\n\r\n    @Keep\r\n    public MorphDialogToFab(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.FabTransform);\r\n        endColor = typedArray.getColor(R.styleable.FabTransform_endColor, endColor);\r\n        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_endCornerRadius, endCornerRadius);\r\n        typedArray.recycle();\r\n    }\r\n\r\n    public void setEndColor(@ColorInt int endColor) {\r\n        this.endColor = endColor;\r\n    }\r\n\r\n    public void setEndCornerRadius(int endCornerRadius) {\r\n        this.endCornerRadius = endCornerRadius;\r\n    }\r\n\r\n    @Override\r\n    public String[] getTransitionProperties() {\r\n        ArrayList<String> boundsTransitionProps = new ArrayList<>(Arrays.asList(super.getTransitionProperties()));\r\n        Collections.addAll(boundsTransitionProps, TRANSITION_PROPERTIES);\r\n        return boundsTransitionProps.toArray(new String[0]);\r\n    }\r\n\r\n    @Override\r\n    public void captureStartValues(TransitionValues transitionValues) {\r\n        super.captureStartValues(transitionValues);\r\n        final View view = transitionValues.view;\r\n        if (view.getWidth() <= 0 || view.getHeight() <= 0) {\r\n            return;\r\n        }\r\n        transitionValues.values.put(PROPERTY_COLOR, Color.WHITE);\r\n        transitionValues.values.put(PROPERTY_CORNER_RADIUS, 0);\r\n    }\r\n\r\n    @Override\r\n    public void captureEndValues(TransitionValues transitionValues) {\r\n        super.captureEndValues(transitionValues);\r\n        final View view = transitionValues.view;\r\n        if (view.getWidth() <= 0 || view.getHeight() <= 0) {\r\n            return;\r\n        }\r\n        transitionValues.values.put(PROPERTY_COLOR, endColor);\r\n        transitionValues.values.put(PROPERTY_CORNER_RADIUS,\r\n                endCornerRadius >= 0 ? endCornerRadius : view.getHeight() / 2);\r\n    }\r\n\r\n    @Override\r\n    public Animator createAnimator(final ViewGroup sceneRoot,\r\n                                   TransitionValues startValues,\r\n                                   TransitionValues endValues) {\r\n        Animator changeBounds = super.createAnimator(sceneRoot, startValues, endValues);\r\n        if (startValues == null || endValues == null || changeBounds == null) {\r\n            return null;\r\n        }\r\n\r\n        Integer startColor = (Integer) startValues.values.get(PROPERTY_COLOR);\r\n        Integer startCornerRadius = (Integer) startValues.values.get(PROPERTY_CORNER_RADIUS);\r\n        Integer endColor = (Integer) endValues.values.get(PROPERTY_COLOR);\r\n        Integer endCornerRadius = (Integer) endValues.values.get(PROPERTY_CORNER_RADIUS);\r\n\r\n        if (startColor == null || startCornerRadius == null || endColor == null ||\r\n                endCornerRadius == null) {\r\n            return null;\r\n        }\r\n\r\n        MorphDrawable background = new MorphDrawable(startColor, startCornerRadius);\r\n        endValues.view.setBackground(background);\r\n\r\n        Animator color = ObjectAnimator.ofArgb(background, MorphDrawable.COLOR, endColor);\r\n        Animator corners = ObjectAnimator.ofFloat(background, MorphDrawable.CORNER_RADIUS,\r\n                endCornerRadius);\r\n\r\n        // hide child views (offset down & fade out)\r\n        if (endValues.view instanceof ViewGroup) {\r\n            ViewGroup vg = (ViewGroup) endValues.view;\r\n            for (int i = 0; i < vg.getChildCount(); i++) {\r\n                View v = vg.getChildAt(i);\r\n                v.setVisibility(View.GONE);\r\n                // This clips the children to the final FAB size, so we only see the small part animate\r\n                v.animate()\r\n                        .alpha(0f)\r\n                        .translationY(v.getHeight() / 3f)\r\n                        .setStartDelay(0L)\r\n                        .setDuration(50L)\r\n                        .setInterpolator(AnimUtils.getFastOutLinearInInterpolator())\r\n                        .start();\r\n            }\r\n        }\r\n\r\n        AnimatorSet transition = new AnimatorSet();\r\n        transition.playTogether(changeBounds, corners, color);\r\n        transition.setDuration(500);\r\n        transition.setInterpolator(AnimUtils.getFastOutSlowInInterpolator());\r\n        return transition;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/transition/MorphDialogToFab.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/ui/transition/MorphDialogToFab.java	(date 1594734873189)
@@ -62,9 +62,9 @@
     @Keep
     public MorphDialogToFab(Context context, AttributeSet attrs) {
         super(context, attrs);
-        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.FabTransform);
-        endColor = typedArray.getColor(R.styleable.FabTransform_endColor, endColor);
-        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.FabTransform_endCornerRadius, endCornerRadius);
+        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.Transform);
+        endColor = typedArray.getColor(R.styleable.Transform_endColor, endColor);
+        endCornerRadius = typedArray.getDimensionPixelSize(R.styleable.Transform_endCornerRadius, endCornerRadius);
         typedArray.recycle();
     }
 
Index: app/src/main/java/xjunz/tool/wechat/ui/transition/GenericButtonMorph.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/ui/transition/GenericButtonMorph.java	(date 1604070448326)
+++ app/src/main/java/xjunz/tool/wechat/ui/transition/GenericButtonMorph.java	(date 1604070448326)
@@ -0,0 +1,185 @@
+/*
+ * Copyright (c) 2020 xjunz. 保留所有权利
+ */
+package xjunz.tool.wechat.ui.transition;
+
+import android.animation.Animator;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
+import android.animation.RectEvaluator;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Bitmap;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Rect;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.ColorDrawable;
+import android.graphics.drawable.Drawable;
+import android.transition.Transition;
+import android.transition.TransitionValues;
+import android.util.AttributeSet;
+import android.util.Property;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.AnimationUtils;
+import android.widget.Button;
+
+import androidx.annotation.ColorLong;
+
+import org.jetbrains.annotations.NotNull;
+
+import xjunz.tool.wechat.R;
+
+/**
+ * 一个通用的从{@link Button}到其他矩形UI的{@code Shared Element}{@link Transition}动画
+ *
+ * <p>实现方式为通过在XML中定义{@link Button}的各个外观属性（保证和原{@link Button}外观一致即可），
+ * 利用这些属性渲染出一个假的{@link Button}，然后获取该{@link Button}的{@code drawingCache}，并添加到
+ * {@code overlay}中，最后执行各种动画实现过渡。其他细节查看代码。</p>
+ * <p>
+ * {@link Button}的各个属性会从{@code transition}节点下获取，所以需要在{@code transition}节点下定义
+ * {@link Button}的各个属性。
+ * }
+ *
+ * @author xjunz 2020/7/15 2:41
+ */
+public class GenericButtonMorph extends Transition {
+    /**
+     * 储存和获取初始及结束视图的{@link Rect}的键值
+     *
+     * @see GenericButtonMorph#captureValues(TransitionValues)
+     */
+    private static final String PROPNAME_RECT = "GenericButtonMorph:rect";
+    private static final String[] PROPERTIES = new String[]{
+            PROPNAME_RECT
+    };
+    /**
+     * 构造的和初始{@link Button}外观一致的假Button
+     */
+    private final Button mFakeButton;
+    /**
+     * 初始{@link Button}的视觉上的背景色，即实际看到的Button的颜色。比如
+     * 当Button的{@link Button#getBackground()}返回的背景是透明时，它的视觉上
+     * 的背景色就应当是其父布局的背景色（或是其他可能的情况），此时该属性
+     * 就应当设置为相应的颜色而不是透明。
+     * 这个颜色会用于使模拟的假Button更加逼真以及构造过渡动画。
+     *
+     * <p>
+     * 如果此属性未被设置，其默认值为透明，这可能会导致过渡动画的不和谐。
+     *
+     * @see GenericButtonMorph#createAnimator(ViewGroup, TransitionValues, TransitionValues)
+     * @see R.styleable#Transform_opticalButtonColor
+     */
+    @ColorLong
+    private final int mOpticalButtonColor;
+
+    public GenericButtonMorph(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        //从transition节点获取button的属性并构造之
+        mFakeButton = new Button(context, attrs);
+        //获取opticalButtonColor
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.Transform);
+        mOpticalButtonColor = ta.getColor(R.styleable.Transform_opticalButtonColor, Color.TRANSPARENT);
+        ta.recycle();
+    }
+
+
+    private void captureValues(@NotNull TransitionValues transitionValues) {
+        View view = transitionValues.view;
+        transitionValues.values.put(PROPNAME_RECT, new Rect(view.getLeft(), view.getTop(), view.getRight(), view.getBottom()));
+    }
+
+
+    @Override
+    public void captureStartValues(TransitionValues transitionValues) {
+        captureValues(transitionValues);
+    }
+
+    @Override
+    public void captureEndValues(TransitionValues transitionValues) {
+        captureValues(transitionValues);
+    }
+
+    @Override
+    public String[] getTransitionProperties() {
+        return PROPERTIES;
+    }
+
+
+    /**
+     * 自定义{@link Property}，通过{@link View#getClipBounds()}和{@link View#setClipBounds(Rect)}
+     * 实现{@code clipBounds}动画。
+     */
+    private static final Property<View, Rect> CLIP_BOUNDS = new Property<View, Rect>(Rect.class, "clipBounds") {
+        @Override
+        public Rect get(@NotNull View object) {
+            return object.getClipBounds();
+        }
+
+        @Override
+        public void set(@NotNull View object, Rect value) {
+            object.setClipBounds(value);
+        }
+    };
+
+
+    @Override
+    public Animator createAnimator(ViewGroup sceneRoot, TransitionValues
+            startValues, TransitionValues endValues) {
+        if (startValues == null || endValues == null) {
+            return null;
+        }
+        Rect startRect = (Rect) startValues.values.get(PROPNAME_RECT);
+        Rect endRect = (Rect) endValues.values.get(PROPNAME_RECT);
+
+        if (endRect == null || startRect == null) {
+            return null;
+        }
+
+        boolean fromLarger = endRect.width() < startRect.width();
+        View target = endValues.view;
+        Rect smallerRect = fromLarger ? endRect : startRect;
+        Rect largerRect = fromLarger ? startRect : endRect;
+        //从大视图过渡为小视图之前，Transition框架会将当前较大视图layout为较小视图用以captureEndValues
+        //为了执行clipBounds，我们将其恢复layout为原来大小
+        if (fromLarger) {
+            target.layout(largerRect.left, largerRect.top, largerRect.right, largerRect.bottom);
+        }
+        mFakeButton.measure(View.MeasureSpec.makeMeasureSpec(smallerRect.width(), View.MeasureSpec.EXACTLY)
+                , View.MeasureSpec.makeMeasureSpec(smallerRect.height(), View.MeasureSpec.EXACTLY));
+        mFakeButton.layout(0, 0, mFakeButton.getMeasuredWidth(), mFakeButton.getMeasuredHeight());
+        Bitmap bitmap = Bitmap.createBitmap(startRect.width(), startRect.height(), Bitmap.Config.ARGB_8888);
+        Canvas canvas = new Canvas(bitmap);
+        mFakeButton.draw(canvas);
+        Drawable overlayButton = new BitmapDrawable(bitmap);
+        Drawable overlayBackColor = new ColorDrawable(mOpticalButtonColor);
+
+        int left = (largerRect.width() - smallerRect.width()) / 2;
+        int top = (largerRect.height() - smallerRect.height()) / 2;
+        overlayButton.setBounds(left, top, left + startRect.width(), top + startRect.height());
+        overlayBackColor.setBounds(0, 0, largerRect.width(), largerRect.height());
+        target.getOverlay().add(overlayBackColor);
+        target.getOverlay().add(overlayButton);
+
+        long halfDuration = getDuration() / 2;
+        ObjectAnimator fadeButton = ObjectAnimator.ofInt(overlayButton, "alpha", fromLarger ? new int[]{0, 255} : new int[]{255, 0}).setDuration(halfDuration);
+        ObjectAnimator fadeButtonColor = ObjectAnimator.ofInt(overlayBackColor, "alpha", fromLarger ? new int[]{0, 255} : new int[]{255, 0}).setDuration(halfDuration);
+
+
+        Rect rectSmall = new Rect(left, top, left + smallerRect.width(), top + smallerRect.height());
+        Rect rectLarge = new Rect(0, 0, target.getWidth(), target.getHeight());
+        ObjectAnimator changeClipBounds = ObjectAnimator.ofObject(target, CLIP_BOUNDS, new RectEvaluator(), !fromLarger ? new Rect[]{rectSmall
+                , rectLarge} : new Rect[]{rectLarge, rectSmall});
+        float transX = startRect.centerX() - endRect.centerX();
+        float transY = startRect.centerY() - endRect.centerY();
+        ObjectAnimator translate = ObjectAnimator.ofFloat(target, View.TRANSLATION_X, View.TRANSLATION_Y
+                , fromLarger ? getPathMotion().getPath(0, 0, -transX, -transY) : getPathMotion().getPath(transX, transY, 0, 0));
+
+        AnimatorSet set = new AnimatorSet();
+        set.playTogether(changeClipBounds, translate, fadeButton, fadeButtonColor);
+        set.setInterpolator(AnimationUtils.loadInterpolator(target.getContext(), android.R.interpolator.fast_out_slow_in));
+        return set;
+
+    }
+}
Index: app/src/main/res/drawable/bg_bubble_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:color=\"?colorControlHighlight\">\r\n    <item>\r\n        <shape android:shape=\"rectangle\">\r\n            <corners\r\n                android:bottomLeftRadius=\"@dimen/r_bubble_obtuse\"\r\n                android:bottomRightRadius=\"@dimen/r_bubble_obtuse\"\r\n                android:topLeftRadius=\"@dimen/r_bubble_acute\"\r\n                android:topRightRadius=\"@dimen/r_bubble_obtuse\" />\r\n            <solid android:color=\"?colorPrimary\" />\r\n        </shape>\r\n    </item>\r\n</ripple>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_bubble_left.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/drawable/bg_bubble_left.xml	(date 1594961531974)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (c) 2020 xjunz. 保留所有权利
   -->
-
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
     android:color="?colorControlHighlight">
     <item>
Index: app/src/main/res/layout/fragment_stats.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_stats.xml	(date 1595605829489)
+++ app/src/main/res/layout/fragment_stats.xml	(date 1595605829489)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<layout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <Button
+            android:id="@+id/btn_reset"
+            style="@style/Widget.AppCompat.Button.Small"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="查看统计信息"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_bubble_complex.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:color=\"@color/colorMask\">\r\n    <item>\r\n        <shape android:shape=\"rectangle\">\r\n            <corners android:radius=\"@dimen/r_bubble_acute\" />\r\n            <solid android:color=\"?colorPrimary\" />\r\n        </shape>\r\n    </item>\r\n</ripple>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_bubble_complex.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/drawable/bg_bubble_complex.xml	(date 1594961543860)
@@ -3,7 +3,7 @@
   -->
 
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
-    android:color="@color/colorMask">
+    android:color="?colorControlHighlight">
     <item>
         <shape android:shape="rectangle">
             <corners android:radius="@dimen/r_bubble_acute" />
Index: app/src/main/res/layout/item_separator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"@color/colorBackgroundLightGrey\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/ib_shutter\"\r\n        android:scaleType=\"centerInside\"\r\n        android:layout_width=\"@dimen/dp_20\"\r\n        android:layout_height=\"@dimen/dp_20\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_marginStart=\"@dimen/spacing_normal\"\r\n        android:layout_marginTop=\"@dimen/spacing_unit\"\r\n        android:layout_marginBottom=\"@dimen/spacing_unit\"\r\n        android:background=\"?selectableItemBackgroundBorderless\"\r\n        android:src=\"@drawable/ic_baseline_expand_more_24\"\r\n        android:tint=\"?colorAccent\" />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_separator\"\r\n        android:layout_marginStart=\"@dimen/spacing_unit\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_toEndOf=\"@+id/ib_shutter\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:textAllCaps=\"true\"\r\n        android:textColor=\"?colorAccent\"\r\n        tools:text=\"@string/app_name\" />\r\n\r\n    <View\r\n        android:id=\"@+id/divider_bottom\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"1px\"\r\n        android:alpha=\"0.5\"\r\n        android:layout_below=\"@+id/ib_shutter\"\r\n        android:background=\"?android:listDivider\" />\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_separator.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/layout/item_separator.xml	(date 1594711493815)
@@ -5,12 +5,10 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@color/colorBackgroundLightGrey">
+    android:layout_height="wrap_content">
 
     <ImageButton
         android:id="@+id/ib_shutter"
-        android:scaleType="centerInside"
         android:layout_width="@dimen/dp_20"
         android:layout_height="@dimen/dp_20"
         android:layout_alignParentStart="true"
@@ -19,16 +17,18 @@
         android:layout_marginTop="@dimen/spacing_unit"
         android:layout_marginBottom="@dimen/spacing_unit"
         android:background="?selectableItemBackgroundBorderless"
+        android:scaleType="centerInside"
         android:src="@drawable/ic_baseline_expand_more_24"
-        android:tint="?colorAccent" />
+        android:tint="?colorAccent"
+        android:contentDescription="@string/cd_shutter" />
 
 
     <TextView
         android:id="@+id/tv_separator"
-        android:layout_marginStart="@dimen/spacing_unit"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_centerVertical="true"
+        android:layout_marginStart="@dimen/spacing_unit"
         android:layout_toEndOf="@+id/ib_shutter"
         android:letterSpacing="0.04"
         android:textAllCaps="true"
@@ -39,7 +39,7 @@
         android:id="@+id/divider_bottom"
         android:layout_width="match_parent"
         android:layout_height="1px"
+        android:layout_below="@+id/ib_shutter"
         android:alpha="0.5"
-        android:layout_below="@+id/ib_shutter"
         android:background="?android:listDivider" />
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/xjunz/tool/wechat/data/viewmodel/MessageViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright (c) 2020 xjunz. 保留所有权利\r\n */\r\n\r\npackage xjunz.tool.wechat.data.viewmodel;\r\n\r\nimport androidx.databinding.ObservableBoolean;\r\nimport androidx.databinding.ObservableField;\r\n\r\nimport xjunz.tool.wechat.impl.model.account.Talker;\r\nimport xjunz.tool.wechat.impl.model.message.BackupMessage;\r\nimport xjunz.tool.wechat.impl.model.message.Message;\r\n\r\n/**\r\n * @author xjunz 2020/7/13 00:47\r\n */\r\npublic class MessageViewModel extends ObservableViewModel {\r\n    public Talker currentTalker;\r\n    public ObservableInt currentPageIndex = new ObservableInt(0);\r\n    public ObservableBoolean hasLoadAll = new ObservableBoolean(false);\r\n    public List<Message> currentLoadedMessages = new ArrayList<>();\r\n    public List<BackupMessage> allBackupMessages = new ArrayList<>();\r\n    public int actualMessageCount;\r\n    public int selectedMessagePosition;\r\n    private final ArrayList<EventHandler> eventHandlers = new ArrayList<>();\r\n\r\n    //EditionFragment variables\r\n\r\n    /**\r\n     * 选中确认的Editions（0）还是未确认的Editions（1）\r\n     */\r\n    public final ObservableInt editionSetSelection = new ObservableInt(0);\r\n    /**\r\n     * 选中的Edition类型\r\n     *\r\n     * @see xjunz.tool.wechat.impl.model.message.Edition\r\n     */\r\n    public final ObservableInt editionFlagSelection = new ObservableInt(0);\r\n\r\n    public void addEventHandler(EventHandler eventHandler) {\r\n        eventHandlers.add(eventHandler);\r\n    }\r\n\r\n    public void notifySearch(String keyword) {\r\n        for (EventHandler eventHandler : eventHandlers) {\r\n            eventHandler.onSearch(keyword);\r\n        }\r\n    }\r\n\r\n    public void notifyNavigate(Message msg) {\r\n        for (EventHandler eventHandler : eventHandlers) {\r\n            eventHandler.onNavigate(msg);\r\n        }\r\n    }\r\n\r\n    public void notifyAllLoaded(int preCount) {\r\n        hasLoadAll.set(true);\r\n        for (EventHandler eventHandler : eventHandlers) {\r\n            eventHandler.onAllLoaded(preCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 向所有{@link EventHandler}发布消息变更事件\r\n     *\r\n     * @param msgId 变更的消息ID\r\n     */\r\n    public void notifyMessageChanged(int msgId) {\r\n\r\n    }\r\n\r\n    public void setSelectedMessagePosition(int position) {\r\n        this.selectedMessagePosition = position;\r\n    }\r\n\r\n    public Message getSelectedMessage() {\r\n        return currentLoadedMessages.get(selectedMessagePosition);\r\n    }\r\n\r\n    /**\r\n     * 事件处理者。处理需要{@link android.app.Activity}和{@link androidx.fragment.app.Fragment}或\r\n     * {@link androidx.fragment.app.Fragment}之间进行交互的事件。\r\n     */\r\n    public static class EventHandler {\r\n        public void onSearch(String keyword) {\r\n        }\r\n\r\n        public void onNavigate(Message msg) {\r\n        }\r\n\r\n        public void onAllLoaded(int preCount) {\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/data/viewmodel/MessageViewModel.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/data/viewmodel/MessageViewModel.java	(date 1605192485125)
@@ -5,7 +5,10 @@
 package xjunz.tool.wechat.data.viewmodel;
 
 import androidx.databinding.ObservableBoolean;
-import androidx.databinding.ObservableField;
+import androidx.databinding.ObservableInt;
+
+import java.util.ArrayList;
+import java.util.List;
 
 import xjunz.tool.wechat.impl.model.account.Talker;
 import xjunz.tool.wechat.impl.model.message.BackupMessage;
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<resources>\r\n    <!-- Default screen margins, per the Android Design guidelines. -->\r\n    <dimen name=\"dp_0\">0dp</dimen>\r\n    <dimen name=\"dp_1\">1dp</dimen>\r\n    <dimen name=\"dp_2\">2dp</dimen>\r\n    <dimen name=\"dp_4\">4dp</dimen>\r\n    <dimen name=\"dp_6\">6dp</dimen>\r\n    <dimen name=\"dp_12\">12dp</dimen>\r\n    <dimen name=\"spacing_unit\">8dp</dimen>\r\n    <dimen name=\"spacing_normal\">16dp</dimen>\r\n    <dimen name=\"spacing_large\">32dp</dimen>\r\n    <dimen name=\"fab_small\">40dp</dimen>\r\n    <dimen name=\"r_fab_small\">20dp</dimen>\r\n    <dimen name=\"minus_r_fab_small\">-20dp</dimen>\r\n    <dimen name=\"fab_medium\">48dp</dimen>\r\n    <dimen name=\"fab_normal\">56dp</dimen>\r\n    <dimen name=\"fab_normal_radius\">28dp</dimen>\r\n    <dimen name=\"fab_normal_radius_minus\">-28dp</dimen>\r\n    <dimen name=\"z_toolbar\">2.5dp</dimen>\r\n    <dimen name=\"z_bottom_bar\">6dp</dimen>\r\n    <dimen name=\"z_popup\">3dp</dimen>\r\n    <dimen name=\"z_card\">2dp</dimen>\r\n    <dimen name=\"z_dialog\">10dp</dimen>\r\n    <dimen name=\"z_fab\">4dp</dimen>\r\n    <dimen name=\"z_item\">1dp</dimen>\r\n    <dimen name=\"z_float_bottom_bar\">2.5dp</dimen>\r\n    <dimen name=\"corner_card\">2dp</dimen>\r\n    <dimen name=\"corner_dialog\">4dp</dimen>\r\n    <dimen name=\"corner_button\">2dp</dimen>\r\n    <dimen name=\"ts_medium\">20sp</dimen>\r\n    <dimen name=\"dp_48\">48dp</dimen>\r\n    <dimen name=\"dp_20\">20dp</dimen>\r\n    <dimen name=\"divider_thickness\">.5dp</dimen>\r\n    <dimen name=\"z_bubble\">1dp</dimen>\r\n    <dimen name=\"max_bubble_width\">300dp</dimen>\r\n    <dimen name=\"r_bubble_obtuse\">16dp</dimen>\r\n    <dimen name=\"r_bubble_acute\">2dp</dimen>\r\n    <dimen name=\"min_complex_msg_width\">250dp</dimen>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/values/dimens.xml	(date 1605420309769)
@@ -18,7 +18,7 @@
     <dimen name="minus_r_fab_small">-20dp</dimen>
     <dimen name="fab_medium">48dp</dimen>
     <dimen name="fab_normal">56dp</dimen>
-    <dimen name="fab_normal_radius">28dp</dimen>
+    <dimen name="r_fab_normal">28dp</dimen>
     <dimen name="fab_normal_radius_minus">-28dp</dimen>
     <dimen name="z_toolbar">2.5dp</dimen>
     <dimen name="z_bottom_bar">6dp</dimen>
Index: app/src/main/java/xjunz/tool/wechat/data/databinding/DetailActivityBindingAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Copyright (c) 2020 xjunz. 保留所有权利\r\n */\r\n\r\npackage xjunz.tool.wechat.data.databinding;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.databinding.BindingAdapter;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\nimport xjunz.tool.wechat.R;\r\nimport xjunz.tool.wechat.util.UiUtils;\r\nimport xjunz.tool.wechat.util.UniUtils;\r\n\r\npublic class DetailActivityBindingAdapter {\r\n    @BindingAdapter(value = \"android:src\")\r\n    public static void setSrc(CircleImageView imageView, @Nullable Bitmap bitmap) {\r\n        if (bitmap == null) {\r\n            imageView.setImageResource(R.mipmap.avatar_default);\r\n        } else {\r\n            imageView.setImageBitmap(bitmap);\r\n        }\r\n    }\r\n\r\n\r\n    @BindingAdapter(\"android:copyable\")\r\n    public static void setCopyable(TextView textView, boolean isCopyable) {\r\n        if (isCopyable) {\r\n            Drawable drawable = textView.getContext().getTheme().getDrawable(R.drawable.bg_clickable_text).mutate();\r\n            textView.setClickable(true);\r\n            textView.setFocusable(true);\r\n            textView.setBackground(drawable);\r\n            textView.setOnClickListener(v -> {\r\n                UniUtils.copyPlainText(\"Contact info\", textView.getText());\r\n                UiUtils.toast(R.string.has_copied_to_clipboard);\r\n            });\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/xjunz/tool/wechat/data/databinding/DetailActivityBindingAdapter.java	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/java/xjunz/tool/wechat/data/databinding/DetailActivityBindingAdapter.java	(date 1605319837440)
@@ -17,7 +17,8 @@
 import xjunz.tool.wechat.util.UniUtils;
 
 public class DetailActivityBindingAdapter {
-    @BindingAdapter(value = "android:src")
+
+    @BindingAdapter(value = "android:avatar")
     public static void setSrc(CircleImageView imageView, @Nullable Bitmap bitmap) {
         if (bitmap == null) {
             imageView.setImageResource(R.mipmap.avatar_default);
Index: app/src/main/res/layout/activity_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n\r\n        <import type=\"android.app.Activity\" />\r\n\r\n        <variable\r\n            name=\"model\"\r\n            type=\"xjunz.tool.wechat.data.viewmodel.MessageViewModel\" />\r\n\r\n        <variable\r\n            name=\"modifier\"\r\n            type=\"xjunz.tool.wechat.impl.DatabaseModifier\" />\r\n    </data>\r\n\r\n    <xjunz.tool.wechat.ui.customview.MessagePanel\r\n        android:id=\"@+id/message_panel\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/pb_load\"\r\n            style=\"?android:attr/progressBarStyleHorizontal\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:elevation=\"@dimen/z_bubble\"\r\n            android:indeterminate=\"true\"\r\n            android:translationY=\"-6dp\"\r\n            android:visibility=\"gone\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/top_bar\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/rv_message\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginBottom=\"?actionBarSize\"\r\n            android:background=\"@color/colorBackgroundLightGrey\"\r\n            android:clipToPadding=\"false\"\r\n            android:paddingTop=\"@dimen/spacing_normal\"\r\n            android:paddingBottom=\"@dimen/spacing_normal\"\r\n            android:scrollbars=\"vertical\"\r\n            app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/top_bar\"\r\n            app:reverseLayout=\"true\"\r\n            app:stackFromEnd=\"true\"\r\n            tools:listitem=\"@layout/item_bubble_plain_left\" />\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/top_bar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"?colorPrimary\"\r\n            android:elevation=\"@dimen/z_toolbar\"\r\n            android:minHeight=\"?actionBarSize\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_top_bar_title\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"8dp\"\r\n                android:letterSpacing=\".05\"\r\n                android:text=\"@{talker.name}\"\r\n                android:textColor=\"?colorAccent\"\r\n                android:textSize=\"@dimen/ts_medium\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintStart_toEndOf=\"@+id/ib_close\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/ib_close\"\r\n                android:layout_width=\"@dimen/fab_small\"\r\n                android:layout_height=\"@dimen/fab_small\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:background=\"?android:attr/selectableItemBackgroundBorderless\"\r\n                android:contentDescription=\"@string/filter\"\r\n                android:onClick=\"@{()->((Activity)context).finish()}\"\r\n                android:src=\"@drawable/ic_close_24dp\"\r\n                android:tint=\"?colorButtonNormal\"\r\n                android:tooltip=\"@{@string/close}\"\r\n                android:transitionName=\"@string/tn_filter\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/ll_curtain\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"?colorPrimary\"\r\n            android:elevation=\"@dimen/z_bottom_bar\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/bottom_bar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"?colorPrimary\"\r\n                android:elevation=\"@dimen/z_toolbar\">\r\n\r\n                <EditText\r\n                    android:id=\"@+id/et_search\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@null\"\r\n                    android:hint=\"@string/hint_search_message\"\r\n                    android:inputType=\"text\"\r\n                    android:minHeight=\"?actionBarSize\"\r\n                    android:textSize=\"@dimen/ts_medium\"\r\n                    android:visibility=\"gone\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@+id/ll_ib_container\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/ll_ib_container\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"?actionBarSize\"\r\n                    app:layout_constraintBottom_toTopOf=\"@+id/indicator\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/ib_stats\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"?selectableItemBackgroundBorderless\"\r\n                        android:contentDescription=\"@string/statistics\"\r\n                        android:src=\"@drawable/ic_bar_chart_28dp\"\r\n                        android:tooltip=\"@{@string/statistics}\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/ib_search\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"?selectableItemBackgroundBorderless\"\r\n                        android:contentDescription=\"@string/search\"\r\n                        android:src=\"@drawable/ic_search_24dp\"\r\n                        android:tooltip=\"@{@string/search}\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/ib_edit\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"?selectableItemBackgroundBorderless\"\r\n                        android:contentDescription=\"@string/edit\"\r\n                        android:editMode=\"@={model.isInEditMode}\"\r\n                        android:src=\"@drawable/ic_pencil_24dp\"\r\n                        android:tooltip=\"@{model.isInEditMode?@string/edit:@string/check_only}\" />\r\n                </LinearLayout>\r\n\r\n                <View\r\n                    android:id=\"@+id/indicator\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"2dp\"\r\n                    android:background=\"?colorAccent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@+id/ll_ib_container\" />\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            <androidx.viewpager2.widget.ViewPager2\r\n                android:id=\"@+id/vp_message\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\" />\r\n        </LinearLayout>\r\n    </xjunz.tool.wechat.ui.customview.MessagePanel>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_message.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/layout/activity_message.xml	(date 1605358758710)
@@ -8,7 +8,10 @@
 
     <data>
 
-        <import type="android.app.Activity" />
+        <import type="xjunz.tool.wechat.util.UniUtils" />
+
+        <import type="xjunz.tool.wechat.ui.message.MessageActivity" />
+
 
         <variable
             name="model"
@@ -19,169 +22,221 @@
             type="xjunz.tool.wechat.impl.DatabaseModifier" />
     </data>
 
-    <xjunz.tool.wechat.ui.customview.MessagePanel
-        android:id="@+id/message_panel"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:transitionGroup="false">
+        <!--对android:id/background使用fade transition，在执行return transition时，会直接消失，造成突变，而不是渐出，原因不明。
+        因此我们需要构造这个伪造的background来实行过渡，而不使用android:windowBackground属性-->
+        <View
+            android:id="@+id/background"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:background="@color/colorMask" />
+
+        <xjunz.tool.wechat.ui.customview.ElasticDragDismissFrameLayout
+            android:id="@+id/elastic"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:onDismiss="@{()->UniUtils.getHostActivity(context).finishAfterTransition()}"
+            android:transitionGroup="false"
+            app:dragDismissDistance="112dp"
+            app:dragDismissScale=".95"
+            app:dragDismissTarget="@id/rv_message">
+
+            <xjunz.tool.wechat.ui.customview.MessagePanel
+                android:id="@+id/message_panel"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:transitionGroup="false">
 
-        <ProgressBar
-            android:id="@+id/pb_load"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:elevation="@dimen/z_bubble"
-            android:indeterminate="true"
-            android:translationY="-6dp"
-            android:visibility="gone"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/top_bar" />
+                <ProgressBar
+                    android:id="@+id/pb_load"
+                    style="?android:attr/progressBarStyleHorizontal"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:elevation="@dimen/z_bubble"
+                    android:indeterminate="true"
+                    android:translationY="-6dp"
+                    android:visibility="gone"
+                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    app:layout_constraintTop_toBottomOf="@+id/top_bar" />
 
-        <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/rv_message"
-            android:layout_width="0dp"
-            android:layout_height="0dp"
-            android:layout_marginBottom="?actionBarSize"
-            android:background="@color/colorBackgroundLightGrey"
-            android:clipToPadding="false"
-            android:paddingTop="@dimen/spacing_normal"
-            android:paddingBottom="@dimen/spacing_normal"
-            android:scrollbars="vertical"
-            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/top_bar"
-            app:reverseLayout="true"
-            app:stackFromEnd="true"
-            tools:listitem="@layout/item_bubble_plain_left" />
+                <androidx.recyclerview.widget.RecyclerView
+                    android:id="@+id/rv_message"
+                    android:layout_width="0dp"
+                    android:layout_height="0dp"
+                    android:layout_marginBottom="?actionBarSize"
+                    android:background="?android:colorBackground"
+                    android:clipToPadding="false"
+                    android:nestedScrollingEnabled="true"
+                    android:scrollbars="vertical"
+                    android:transitionName="@string/tn_message_list"
+                    app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+                    app:layout_constraintBottom_toBottomOf="parent"
+                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    app:layout_constraintTop_toBottomOf="@+id/top_bar"
+                    app:reverseLayout="true"
+                    app:stackFromEnd="true"
+                    tools:listitem="@layout/item_bubble_plain_left" />
 
-        <androidx.constraintlayout.widget.ConstraintLayout
-            android:id="@+id/top_bar"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:background="?colorPrimary"
-            android:elevation="@dimen/z_toolbar"
-            android:minHeight="?actionBarSize"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent">
+                <androidx.constraintlayout.widget.ConstraintLayout
+                    android:id="@+id/top_bar"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:background="?colorPrimary"
+                    android:clickable="true"
+                    android:elevation="@dimen/z_toolbar"
+                    android:focusable="true"
+                    android:minHeight="?actionBarSize"
+                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    app:layout_constraintTop_toTopOf="parent">
 
-            <TextView
-                android:id="@+id/tv_top_bar_title"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginStart="8dp"
-                android:letterSpacing=".05"
-                android:text="@{talker.name}"
-                android:textColor="?colorAccent"
-                android:textSize="@dimen/ts_medium"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintStart_toEndOf="@+id/ib_close"
-                app:layout_constraintTop_toTopOf="parent" />
+                    <TextView
+                        android:id="@+id/tv_top_bar_title"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_marginStart="@dimen/spacing_normal"
+                        android:layout_marginEnd="@dimen/spacing_normal"
+                        android:ellipsize="end"
+                        android:letterSpacing=".05"
+                        android:singleLine="true"
+                        android:text="@{model.currentTalker.name}"
+                        android:textColor="?colorAccent"
+                        android:textSize="@dimen/ts_medium"
+                        app:layout_constraintBottom_toBottomOf="parent"
+                        app:layout_constraintEnd_toStartOf="@+id/ib_apply"
+                        app:layout_constraintStart_toStartOf="parent"
+                        app:layout_constraintTop_toTopOf="parent" />
 
-            <ImageButton
-                android:id="@+id/ib_close"
-                android:layout_width="@dimen/fab_small"
-                android:layout_height="@dimen/fab_small"
-                android:layout_marginStart="16dp"
-                android:background="?android:attr/selectableItemBackgroundBorderless"
-                android:contentDescription="@string/filter"
-                android:onClick="@{()->((Activity)context).finish()}"
-                android:src="@drawable/ic_close_24dp"
-                android:tint="?colorButtonNormal"
-                android:tooltip="@{@string/close}"
-                android:transitionName="@string/tn_filter"
-                app:layout_constraintBottom_toBottomOf="parent"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toTopOf="parent" />
-        </androidx.constraintlayout.widget.ConstraintLayout>
+                    <ImageButton
+                        android:id="@+id/ib_close"
+                        android:layout_width="@dimen/fab_small"
+                        android:layout_height="@dimen/fab_small"
+                        android:layout_marginEnd="8dp"
+                        android:background="?android:attr/selectableItemBackgroundBorderless"
+                        android:contentDescription="@string/filter"
+                        android:onClick="@{()->UniUtils.getHostActivity(context).finishAfterTransition()}"
+                        android:src="@drawable/ic_close_24dp"
+                        android:tint="?colorButtonNormal"
+                        android:tooltip="@{@string/close}"
+                        android:transitionName="@string/tn_filter"
+                        app:layout_constraintBottom_toBottomOf="parent"
+                        app:layout_constraintEnd_toEndOf="parent"
+                        app:layout_constraintTop_toTopOf="parent" />
+
+                    <ImageButton
+                        android:id="@+id/ib_apply"
+                        android:layout_width="@dimen/fab_small"
+                        android:layout_height="@dimen/fab_small"
+                        android:layout_marginEnd="@dimen/spacing_normal"
+                        android:background="?android:attr/selectableItemBackgroundBorderless"
+                        android:contentDescription="@string/apply_changes"
+                        android:enabled="@{modifier==null?false:modifier.hasPendingChanges()}"
+                        android:tooltip="@{@string/apply_changes}"
+                        android:tint="?colorButtonNormal"
+                        app:layout_constraintBottom_toBottomOf="parent"
+                        app:layout_constraintEnd_toStartOf="@+id/ib_close"
+                        app:layout_constraintTop_toTopOf="parent"
+                        app:srcCompat="@drawable/ic_baseline_save_24" />
+                </androidx.constraintlayout.widget.ConstraintLayout>
 
-        <LinearLayout
-            android:id="@+id/ll_curtain"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:background="?colorPrimary"
-            android:elevation="@dimen/z_bottom_bar"
-            android:orientation="vertical"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toTopOf="parent">
+                <LinearLayout
+                    android:id="@+id/ll_curtain"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:background="?colorPrimary"
+                    android:elevation="@dimen/z_bottom_bar"
+                    android:orientation="vertical"
+                    app:layout_constraintBottom_toBottomOf="parent"
+                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintStart_toStartOf="parent"
+                    app:layout_constraintTop_toTopOf="parent">
 
-            <androidx.constraintlayout.widget.ConstraintLayout
-                android:id="@+id/bottom_bar"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:background="?colorPrimary"
-                android:elevation="@dimen/z_toolbar">
+                    <androidx.constraintlayout.widget.ConstraintLayout
+                        android:id="@+id/bottom_bar"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:background="?colorPrimary"
+                        android:elevation="@dimen/z_toolbar">
 
-                <EditText
-                    android:id="@+id/et_search"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:background="@null"
-                    android:hint="@string/hint_search_message"
-                    android:inputType="text"
-                    android:minHeight="?actionBarSize"
-                    android:textSize="@dimen/ts_medium"
-                    android:visibility="gone"
-                    app:layout_constraintBottom_toBottomOf="@+id/ll_ib_container"
-                    app:layout_constraintStart_toStartOf="parent"
-                    app:layout_constraintTop_toTopOf="parent" />
+                        <EditText
+                            android:id="@+id/et_search"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:afterTextChanged="@{e->model.notifySearch(e.toString())}"
+                            android:background="@null"
+                            android:enabled="@{model.currentPageIndex==2&amp;&amp;model.hasLoadAll}"
+                            android:hint="@string/hint_search_message"
+                            android:imeOptions="actionSearch"
+                            android:importantForAutofill="no"
+                            android:inputType="text"
+                            android:minHeight="?actionBarSize"
+                            android:textSize="@dimen/ts_medium"
+                            android:visibility="gone"
+                            app:layout_constraintBottom_toBottomOf="@+id/ll_ib_container"
+                            app:layout_constraintStart_toStartOf="parent"
+                            app:layout_constraintTop_toTopOf="parent" />
 
-                <LinearLayout
-                    android:id="@+id/ll_ib_container"
-                    android:layout_width="match_parent"
-                    android:layout_height="?actionBarSize"
-                    app:layout_constraintBottom_toTopOf="@+id/indicator"
-                    app:layout_constraintStart_toStartOf="parent">
+                        <LinearLayout
+                            android:id="@+id/ll_ib_container"
+                            android:layout_width="match_parent"
+                            android:layout_height="?actionBarSize"
+                            app:layout_constraintBottom_toTopOf="@+id/indicator"
+                            app:layout_constraintStart_toStartOf="parent">
 
-                    <ImageButton
-                        android:id="@+id/ib_stats"
-                        android:layout_width="0dp"
-                        android:layout_height="match_parent"
-                        android:layout_weight="1"
-                        android:background="?selectableItemBackgroundBorderless"
-                        android:contentDescription="@string/statistics"
-                        android:src="@drawable/ic_bar_chart_28dp"
-                        android:tooltip="@{@string/statistics}" />
+                            <ImageButton
+                                android:id="@+id/ib_stats"
+                                android:layout_width="0dp"
+                                android:layout_height="match_parent"
+                                android:layout_weight="1"
+                                android:background="?selectableItemBackgroundBorderless"
+                                android:contentDescription="@string/statistics"
+                                android:src="@drawable/ic_bar_chart_28dp"
+                                android:tooltip="@{@string/statistics}" />
 
-                    <ImageButton
-                        android:id="@+id/ib_search"
-                        android:layout_width="0dp"
-                        android:layout_height="match_parent"
-                        android:layout_weight="1"
-                        android:background="?selectableItemBackgroundBorderless"
-                        android:contentDescription="@string/search"
-                        android:src="@drawable/ic_search_24dp"
-                        android:tooltip="@{@string/search}" />
+                            <ImageButton
+                                android:id="@+id/ib_edit"
+                                android:layout_width="0dp"
+                                android:layout_height="match_parent"
+                                android:layout_weight="1"
+                                android:background="?selectableItemBackgroundBorderless"
+                                android:contentDescription="@string/edited_messages"
+                                android:src="@drawable/ic_pencil_24dp"
+                                android:tooltip="@{@string/edited_messages}" />
 
-                    <ImageButton
-                        android:id="@+id/ib_edit"
-                        android:layout_width="0dp"
-                        android:layout_height="match_parent"
-                        android:layout_weight="1"
-                        android:background="?selectableItemBackgroundBorderless"
-                        android:contentDescription="@string/edit"
-                        android:editMode="@={model.isInEditMode}"
-                        android:src="@drawable/ic_pencil_24dp"
-                        android:tooltip="@{model.isInEditMode?@string/edit:@string/check_only}" />
-                </LinearLayout>
+                            <ImageButton
+                                android:id="@+id/ib_search"
+                                android:layout_width="0dp"
+                                android:layout_height="match_parent"
+                                android:layout_weight="1"
+                                android:background="?selectableItemBackgroundBorderless"
+                                android:contentDescription="@string/search"
+                                android:src="@drawable/ic_search_24dp"
+                                android:tooltip="@{@string/search}" />
+
+                        </LinearLayout>
 
-                <View
-                    android:id="@+id/indicator"
-                    android:layout_width="0dp"
-                    android:layout_height="2dp"
-                    android:background="?colorAccent"
-                    app:layout_constraintStart_toStartOf="parent"
-                    app:layout_constraintTop_toBottomOf="@+id/ll_ib_container" />
-            </androidx.constraintlayout.widget.ConstraintLayout>
+                        <View
+                            android:id="@+id/indicator"
+                            android:layout_width="0dp"
+                            android:layout_height="2dp"
+                            android:background="?colorAccent"
+                            app:layout_constraintStart_toStartOf="parent"
+                            app:layout_constraintTop_toBottomOf="@+id/ll_ib_container" />
+                    </androidx.constraintlayout.widget.ConstraintLayout>
 
-            <androidx.viewpager2.widget.ViewPager2
-                android:id="@+id/vp_message"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent" />
-        </LinearLayout>
-    </xjunz.tool.wechat.ui.customview.MessagePanel>
+                    <androidx.viewpager2.widget.ViewPager2
+                        android:id="@+id/vp_message"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:background="@color/colorBackgroundMask"
+                        android:currentItem="@={model.currentPageIndex}" />
+                </LinearLayout>
+            </xjunz.tool.wechat.ui.customview.MessagePanel>
+        </xjunz.tool.wechat.ui.customview.ElasticDragDismissFrameLayout>
+    </FrameLayout>
 </layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <ViewStub\r\n        android:id=\"@+id/stub_no_result\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:inflatedId=\"@+id/iv_no_result\"\r\n        android:layout=\"@layout/stub_no_result\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/rv_list\"\r\n        android:clipToPadding=\"false\"\r\n        android:paddingBottom=\"?android:attr/actionBarSize\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n        tools:listitem=\"@layout/item_chat\" />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_chat.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/layout/fragment_chat.xml	(date 1596206991413)
@@ -18,10 +18,11 @@
 
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/rv_list"
-        android:clipToPadding="false"
-        android:paddingBottom="?android:attr/actionBarSize"
+        android:overScrollMode="never"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
+        android:clipToPadding="false"
+        android:paddingBottom="?android:attr/actionBarSize"
         app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
         tools:listitem="@layout/item_chat" />
 
Index: app/src/main/res/drawable/bg_btn_normal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright (c) 2020 xjunz. 保留所有权利\r\n  -->\r\n\r\n<inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:inset=\"@dimen/dp_6\">\r\n    <ripple android:color=\"@color/colorMask\">\r\n        <item>\r\n            <shape android:shape=\"rectangle\">\r\n                <corners android:radius=\"@dimen/corner_button\" />\r\n                <solid android:color=\"?colorButtonNormal\" />\r\n            </shape>\r\n        </item>\r\n    </ripple>\r\n</inset>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bg_btn_normal.xml	(revision 0b5bfe522dabef7e0fbd13ca9bbf07253a79760e)
+++ app/src/main/res/drawable/bg_btn_normal.xml	(date 1594805353669)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (c) 2020 xjunz. 保留所有权利
   -->
-
 <inset xmlns:android="http://schemas.android.com/apk/res/android"
     android:inset="@dimen/dp_6">
     <ripple android:color="@color/colorMask">
@@ -9,6 +8,9 @@
             <shape android:shape="rectangle">
                 <corners android:radius="@dimen/corner_button" />
                 <solid android:color="?colorButtonNormal" />
+                <padding
+                    android:left="@dimen/spacing_unit"
+                    android:right="@dimen/spacing_unit" />
             </shape>
         </item>
     </ripple>
Index: app/src/main/res/layout/item_message_search_result.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_message_search_result.xml	(date 1602839139322)
+++ app/src/main/res/layout/item_message_search_result.xml	(date 1602839139322)
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2020 xjunz. 保留所有权利
+  -->
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+
+        <variable
+            name="model"
+            type="xjunz.tool.wechat.data.viewmodel.MessageViewModel" />
+
+        <variable
+            name="item"
+            type="xjunz.tool.wechat.ui.message.fragment.SearchFragment.MessageItem" />
+
+        <import type="xjunz.tool.wechat.util.UniUtils" />
+    </data>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/bg_selectable_item_white"
+        android:clickable="true"
+        android:elevation="@dimen/z_item"
+        android:focusable="true"
+        android:onClick="@{()->model.notifyNavigate(item.message)}">
+
+        <TextView
+            android:id="@+id/tv_name"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dp_12"
+            android:text="@{item.message.senderAccount.name??@string/system_msg}"
+            android:textColor="?colorAccent"
+            app:layout_constraintEnd_toStartOf="@+id/tv_date"
+            app:layout_constraintStart_toStartOf="@+id/tv_content"
+            app:layout_constraintTop_toTopOf="parent"
+            tools:text="@tools:sample/first_names" />
+
+        <TextView
+            android:id="@+id/tv_content"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="@dimen/spacing_normal"
+            android:layout_marginTop="@dimen/dp_4"
+            android:layout_marginEnd="@dimen/spacing_normal"
+            android:layout_marginBottom="@dimen/dp_12"
+            android:keywordHighlight="@{item}"
+            android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+            app:layout_constraintBottom_toTopOf="@+id/divider"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/tv_name"
+            tools:text="@tools:sample/lorem" />
+
+        <TextView
+            android:id="@+id/tv_date"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@{UniUtils.formatDate(item.message.createTimeStamp)}"
+            android:textAppearance="@style/TextAppearance.AppCompat.Caption"
+            app:layout_constraintEnd_toEndOf="@+id/tv_content"
+            app:layout_constraintTop_toTopOf="@+id/tv_name"
+            tools:text="@tools:sample/date/mmddyy" />
+
+        <View
+            android:id="@+id/divider"
+            android:layout_width="match_parent"
+            android:layout_height="1px"
+            android:background="?android:attr/listDivider"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
